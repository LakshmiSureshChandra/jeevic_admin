{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/breadcrumb.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { ChevronRight } from \"lucide-react\"\r\n\r\ninterface BreadcrumbProps {\r\n  items: string[];\r\n}\r\n\r\nexport function Breadcrumb({ items }: BreadcrumbProps) {\r\n  return (\r\n    <div className=\"px-6 pt-3 flex items-center text-sm\">\r\n      {items.map((item, index) => (\r\n        <div key={index} className=\"flex items-center\">\r\n          {index > 0 && <ChevronRight size={16} className=\"mx-2 text-black\" />}\r\n          <Link\r\n            href=\"#\"\r\n            // TODO: Replace '#' with actual item.href if available\r\n\r\n            className={`${\r\n              index === items.length - 1 ? \"text-gray-800 font-medium\" : \"text-black hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            {item}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,qBACE,6LAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,6LAAC;gBAAgB,WAAU;;oBACxB,QAAQ,mBAAK,6LAAC,yNAAA,CAAA,eAAY;wBAAC,MAAM;wBAAI,WAAU;;;;;;kCAChD,6LAAC,+JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,uDAAuD;wBAEvD,WAAW,GACT,UAAU,MAAM,MAAM,GAAG,IAAI,8BAA8B,kCAC3D;kCAED;;;;;;;eAVK;;;;;;;;;;AAgBlB;KApBgB","debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/metric-cards.tsx"],"sourcesContent":["import { Users, ShoppingBag, IndianRupee, TrendingUp, TrendingDown } from \"lucide-react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { APISDK } from \"@/libs/api\"\r\n\r\nexport function MetricCards() {\r\n  const [userCount, setUserCount] = useState<number>(0);\r\n  const [metrics, setMetrics] = useState({\r\n    todayRevenue: 0,\r\n    totalItems: 0,\r\n    totalRevenue: 0,\r\n    profitPercentage: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"access_token\");\r\n        const api = APISDK.getInstance(token);\r\n        const [usersResponse, statsResponse] = await Promise.all([\r\n          api.getAdminUsers(),\r\n          api.getAllStats()\r\n        ]);\r\n\r\n        // Set user count\r\n        setUserCount(usersResponse.data.total);\r\n\r\n        // Fix total items calculation by ensuring numeric values\r\n        const totalItems = statsResponse.data.salesOfAllProducts.reduce((acc, category) => {\r\n          const categoryTotal = category.dishes.reduce((sum, dish) => {\r\n            return sum + (Number(dish.count) || 0);\r\n          }, 0);\r\n          return acc + categoryTotal;\r\n        }, 0);\r\n\r\n        // Get today's date in the format DD-M-YYYY\r\n        const today = new Date();\r\n        const formattedDate = `${today.getDate()}-${today.getMonth() + 1}-${today.getFullYear()}`;\r\n\r\n        // Get today's revenue from dailyProfits\r\n        const todayRevenue = statsResponse.data.dailyProfits[formattedDate] || 0;\r\n\r\n        setMetrics({\r\n          todayRevenue: todayRevenue,\r\n          totalItems: totalItems,\r\n          totalRevenue: statsResponse.data.totalProfit,\r\n          profitPercentage: parseFloat(statsResponse.data.profitPercentage)\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch metrics:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    if (amount >= 10000000) {\r\n      return `${(amount / 10000000).toFixed(2)}Cr INR`;\r\n    } else if (amount >= 100000) {\r\n      return `${(amount / 100000).toFixed(2)}L INR`;\r\n    } else if (amount >= 1000) {\r\n      return `${(amount / 1000).toFixed(2)}K INR`;\r\n    }\r\n    return `${amount} INR`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n      <MetricCard\r\n        title=\"Today Revenue\"\r\n        value={formatCurrency(metrics.todayRevenue)}\r\n        change={metrics.profitPercentage}\r\n        icon={<IndianRupee className=\"h-5 w-5 text-gray-400\" />}\r\n      />\r\n      <MetricCard \r\n        title=\"Total Customers\" \r\n        value={userCount} \r\n        icon={<Users className=\"h-5 w-5 text-gray-400\" />} \r\n      />\r\n      <MetricCard\r\n        title=\"Total Items Ordered\"\r\n        value={metrics.totalItems.toString()}\r\n        icon={<ShoppingBag className=\"h-5 w-5 text-gray-400\" />}\r\n      />\r\n      <MetricCard\r\n        title=\"Total Revenue\"\r\n        value={formatCurrency(metrics.totalRevenue)}\r\n        icon={<IndianRupee className=\"h-5 w-5 text-gray-400\" />}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\ninterface MetricCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  change?: number;\r\n  icon: React.ReactNode;\r\n}\r\n\r\nfunction MetricCard({ title, value, change, icon }: MetricCardProps) {\r\n  return (\r\n    <div className=\"bg-white border rounded-lg p-4\">\r\n      <div className=\"flex items-center text-gray-400 mb-2\">\r\n        {icon}\r\n        <span className=\"text-sm text-gray-400 ml-2\">{title}</span>\r\n      </div>\r\n      <div className=\"flex items-center justify-between\">\r\n        <h3 className=\"text-2xl text-black font-bold\">{value}</h3>\r\n        {title === \"Today Revenue\" && change !== undefined && (\r\n          <div className={`flex items-center text-sm ${change >= 0 ? \"text-green-500\" : \"text-red-500\"}`}>\r\n            {change >= 0 ? (\r\n              <TrendingUp className=\"h-4 w-4 mr-1\" />\r\n            ) : (\r\n              <TrendingDown className=\"h-4 w-4 mr-1\" />\r\n            )}\r\n            <span>\r\n              {change >= 0 ? \"+\" : \"\"}\r\n              {change.toFixed(2)}%\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/revenue-chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\"\r\nimport { APISDK } from \"@/libs/api\"\r\n\r\ninterface RevenueData {\r\n  name: string;\r\n  value: number;\r\n}\r\n\r\ninterface RevenueChartProps {\r\n  selectedTimeRange: string;\r\n}\r\n\r\nexport function RevenueChart({ selectedTimeRange }: RevenueChartProps) {\r\n  const [mounted, setMounted] = useState(false)\r\n  const [allData, setAllData] = useState<{\r\n    sevenDays: RevenueData[];\r\n    thirtyDays: RevenueData[];\r\n    ninetyDays: RevenueData[];\r\n  }>({\r\n    sevenDays: [],\r\n    thirtyDays: [],\r\n    ninetyDays: []\r\n  })\r\n\r\n  const timeRangeMap = {\r\n    '7d': 'sevenDays',\r\n    '30d': 'thirtyDays',\r\n    '90d': 'ninetyDays'\r\n  } as const\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    fetchRevenueData()\r\n  }, []) // Keep this effect for initial load\r\n\r\n  // Add new effect to handle time range changes\r\n  useEffect(() => {\r\n    if (mounted && selectedTimeRange) {\r\n      fetchRevenueData()\r\n    }\r\n  }, [selectedTimeRange, mounted])\r\n\r\n  const fetchRevenueData = async () => {\r\n    try {\r\n      const api = APISDK.getInstance()\r\n      const response = await api.getAllStats()\r\n      \r\n      // Direct access to revenueHistory data\r\n      const revenueData = response.data.revenueHistory\r\n      \r\n      const transformedData = {\r\n        sevenDays: Object.entries(revenueData.sevenDays || {})\r\n          .map(([date, value]) => ({ name: date, value })),\r\n        thirtyDays: Object.entries(revenueData.thirtyDays || {})\r\n          .map(([date, value]) => ({ name: date, value })),\r\n        ninetyDays: Object.entries(revenueData.ninetyDays || {})\r\n          .map(([date, value]) => ({ name: date, value }))\r\n      }\r\n\r\n      console.log('Transformed Revenue Data:', transformedData)\r\n      setAllData(transformedData)\r\n    } catch (error) {\r\n      console.error('Failed to fetch revenue data:', error)\r\n    }\r\n  }\r\n\r\n  // Get current time range data\r\n  const currentData = allData[timeRangeMap[selectedTimeRange as keyof typeof timeRangeMap]] || []\r\n\r\n  const formatIndianNumber = (value: number) => {\r\n    if (value >= 10000000) {\r\n      return `${(value / 10000000).toFixed(1)}Cr`\r\n    } else if (value >= 100000) {\r\n      return `${(value / 100000).toFixed(1)}L`\r\n    } else if (value >= 1000) {\r\n      return `${(value / 1000).toFixed(1)}K`\r\n    }\r\n    return value.toString()\r\n  }\r\n\r\n  if (!mounted || currentData.length === 0) {\r\n    return <div className=\"h-64 flex items-center justify-center\">Loading chart...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-64\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={currentData} margin={{ top: 5, right: 20, left: 0, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" vertical={false} />\r\n          <XAxis \r\n            dataKey=\"name\" \r\n            axisLine={false} \r\n            tickLine={false} \r\n            tick={{ fontSize: 12 }}\r\n            interval={currentData.length > 10 ? 'preserveStartEnd' : 0}\r\n            tickFormatter={(value) => value.split('-')[0]}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{ fontSize: 12 }}\r\n            tickFormatter={formatIndianNumber}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: number) => [`₹${formatIndianNumber(value)}`, \"Revenue\"]}\r\n            contentStyle={{ borderRadius: \"8px\", border: \"1px solid #e2e8f0\" }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"value\"\r\n            stroke=\"#F97316\"\r\n            strokeWidth={2}\r\n            dot={{ r: 4, fill: \"#F97316\", strokeWidth: 2, stroke: \"#FFF\" }}\r\n            activeDot={{ r: 6, fill: \"#F97316\", strokeWidth: 2, stroke: \"#FFF\" }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/sales-donut-chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { PieChart, Pie, Cell, ResponsiveContainer } from \"recharts\"\r\nimport { APISDK } from \"@/libs/api\"\r\n\r\n// Define color palette for categories\r\nconst COLORS = [\r\n  \"#4ADE80\",  // Green\r\n  \"#A855F7\",  // Purple\r\n  \"#F97316\",  // Orange\r\n  \"#EAB308\",  // Yellow\r\n  \"#3B82F6\",  // Blue\r\n  \"#EC4899\",  // Pink\r\n  \"#14B8A6\",  // Teal\r\n  \"#8B5CF6\",  // Indigo\r\n  \"#F43F5E\",  // Rose\r\n  \"#06B6D4\"   // Cyan\r\n]\r\n\r\ninterface SalesData {\r\n  name: string;\r\n  value: number;\r\n  color: string;\r\n}\r\n\r\nexport function SalesDonutChart() {\r\n  const [mounted, setMounted] = useState(false)\r\n  const [data, setData] = useState<SalesData[]>([])\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    fetchSalesData()\r\n  }, [])\r\n\r\n  const fetchSalesData = async () => {\r\n    try {\r\n      const api = APISDK.getInstance()\r\n      const response = await api.getAllStats()\r\n      \r\n      // Transform and sort the data by value to make it more readable\r\n      const salesData = response.data.salesOfProducts\r\n        .filter(item => item.count > 0) // Only show items with sales\r\n        .sort((a, b) => b.count - a.count) // Sort by count in descending order\r\n        .map((item, index) => ({\r\n          name: item.name,\r\n          value: Number(item.count), // Ensure count is a number\r\n          color: COLORS[index % COLORS.length]\r\n        }));\r\n\r\n      setData(salesData)\r\n    } catch (error) {\r\n      console.error('Failed to fetch sales data:', error)\r\n      setData([])\r\n    }\r\n  }\r\n\r\n  if (!mounted) {\r\n    return <div className=\"h-64 flex items-center justify-center\">Loading chart...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-64 relative\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <PieChart>\r\n          <Pie \r\n            data={data} \r\n            cx=\"50%\" \r\n            cy=\"50%\" \r\n            innerRadius={60} \r\n            outerRadius={90} \r\n            paddingAngle={2} \r\n            dataKey=\"value\"\r\n          >\r\n            {data.map((entry) => (\r\n              <Cell key={entry.name} fill={entry.color} />\r\n            ))}\r\n          </Pie>\r\n        </PieChart>\r\n      </ResponsiveContainer>\r\n\r\n      <div className=\"absolute bottom-0 left-0 right-0 flex flex-wrap justify-center gap-x-4 gap-y-2\">\r\n        {data.map((item) => (\r\n          <div key={item.name} className=\"flex items-center\">\r\n            <span \r\n              className=\"w-3 h-3 rounded-full mr-1\" \r\n              style={{ backgroundColor: item.color }}\r\n            />\r\n            <span className=\"text-xs text-black\">\r\n              {item.name} ({item.value})\r\n            </span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;;;AAJA;;;;AAMA,sCAAsC;AACtC,MAAM,SAAS;IACb;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,UAAY,OAAO;CACpB;AAQM,SAAS;;IACd,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,EAAE;IAEhD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,WAAW;YACX;QACF;oCAAG,EAAE;IAEL,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,MAAM,uIAAA,CAAA,SAAM,CAAC,WAAW;YAC9B,MAAM,WAAW,MAAM,IAAI,WAAW;YAEtC,gEAAgE;YAChE,MAAM,YAAY,SAAS,IAAI,CAAC,eAAe,CAC5C,MAAM,CAAC,CAAA,OAAQ,KAAK,KAAK,GAAG,GAAG,6BAA6B;aAC5D,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK,EAAE,oCAAoC;aACtE,GAAG,CAAC,CAAC,MAAM,QAAU,CAAC;oBACrB,MAAM,KAAK,IAAI;oBACf,OAAO,OAAO,KAAK,KAAK;oBACxB,OAAO,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;gBACtC,CAAC;YAEH,QAAQ;QACV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,QAAQ,EAAE;QACZ;IACF;IAEA,IAAI,CAAC,SAAS;QACZ,qBAAO,6LAAC;YAAI,WAAU;sBAAwC;;;;;;IAChE;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,sKAAA,CAAA,sBAAmB;gBAAC,OAAM;gBAAO,QAAO;0BACvC,cAAA,6LAAC,uJAAA,CAAA,WAAQ;8BACP,cAAA,6LAAC,kJAAA,CAAA,MAAG;wBACF,MAAM;wBACN,IAAG;wBACH,IAAG;wBACH,aAAa;wBACb,aAAa;wBACb,cAAc;wBACd,SAAQ;kCAEP,KAAK,GAAG,CAAC,CAAC,sBACT,6LAAC,uJAAA,CAAA,OAAI;gCAAkB,MAAM,MAAM,KAAK;+BAA7B,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;0BAM7B,6LAAC;gBAAI,WAAU;0BACZ,KAAK,GAAG,CAAC,CAAC,qBACT,6LAAC;wBAAoB,WAAU;;0CAC7B,6LAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,iBAAiB,KAAK,KAAK;gCAAC;;;;;;0CAEvC,6LAAC;gCAAK,WAAU;;oCACb,KAAK,IAAI;oCAAC;oCAAG,KAAK,KAAK;oCAAC;;;;;;;;uBANnB,KAAK,IAAI;;;;;;;;;;;;;;;;AAa7B;GAtEgB;KAAA","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/peak-hour-chart.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\"\r\nimport { APISDK } from \"@/libs/api\"\r\n\r\ninterface PeakHourData {\r\n  name: string;\r\n  hour: number;\r\n  orders: number;\r\n}\r\n\r\ninterface PeakHoursChartProps {\r\n  selectedTimeRange: string;\r\n}\r\n\r\ninterface ApiPeakHourData {\r\n  [date: string]: {\r\n    [hour: string]: number;\r\n  };\r\n}\r\n\r\ninterface ApiResponse {\r\n  sevenDays: ApiPeakHourData;\r\n  thirtyDays: ApiPeakHourData;\r\n  ninetyDays: ApiPeakHourData;\r\n}\r\n\r\nexport default function PeakHoursChart({ selectedTimeRange }: PeakHoursChartProps) {\r\n  const [mounted, setMounted] = useState(false)\r\n  const [allData, setAllData] = useState<{\r\n    sevenDays: PeakHourData[];\r\n    thirtyDays: PeakHourData[];\r\n    ninetyDays: PeakHourData[];\r\n  }>({\r\n    sevenDays: [],\r\n    thirtyDays: [],\r\n    ninetyDays: []\r\n  })\r\n\r\n  const timeRangeMap = {\r\n    '7d': 'sevenDays',\r\n    '30d': 'thirtyDays',\r\n    '90d': 'ninetyDays'\r\n  } as const\r\n\r\n  useEffect(() => {\r\n    setMounted(true)\r\n    fetchPeakHourData()\r\n  }, []) // Keep this effect for initial load\r\n\r\n  // Add new effect to handle time range changes\r\n  useEffect(() => {\r\n    if (mounted && selectedTimeRange) {\r\n      fetchPeakHourData()\r\n    }\r\n  }, [selectedTimeRange, mounted])\r\n\r\n  const fetchPeakHourData = async () => {\r\n    try {\r\n      const api = APISDK.getInstance()\r\n      const response = await api.getAllStats()\r\n      \r\n      const transformData = (data: ApiPeakHourData) => {\r\n        return Object.entries(data)\r\n          .map(([date, hours]) => {\r\n            const hourlyOrders = Object.entries(hours)\r\n              .map(([hour, count]) => ({\r\n                hour: parseInt(hour),\r\n                orders: count\r\n              }))\r\n\r\n            const peakHour = hourlyOrders.reduce((max, current) => \r\n              current.orders > max.orders ? current : max\r\n            , hourlyOrders[0])\r\n\r\n            return {\r\n              name: date,\r\n              hour: peakHour.hour,\r\n              orders: peakHour.orders\r\n            }\r\n          })\r\n      }\r\n\r\n      setAllData({\r\n        sevenDays: transformData(response.data.peakHours.sevenDays),\r\n        thirtyDays: transformData(response.data.peakHours.thirtyDays),\r\n        ninetyDays: transformData(response.data.peakHours.ninetyDays)\r\n      })\r\n    } catch (error) {\r\n      console.error('Failed to fetch peak hour data:', error)\r\n    }\r\n  }\r\n\r\n  const transformData = (data: Record<string, Record<string, number>>) => {\r\n    return Object.entries(data)\r\n      .map(([date, hours]) => {\r\n        const hourlyOrders = Object.entries(hours)\r\n          .map(([hour, count]) => ({\r\n            hour: parseInt(hour),\r\n            orders: count\r\n          }))\r\n\r\n        const peakHour = hourlyOrders.reduce((max, current) => \r\n          current.orders > max.orders ? current : max\r\n        , hourlyOrders[0])\r\n\r\n        return {\r\n          name: date,\r\n          hour: peakHour.hour,\r\n          orders: peakHour.orders\r\n        }\r\n      })\r\n  }\r\n\r\n  const currentData = allData[timeRangeMap[selectedTimeRange as keyof typeof timeRangeMap]] || []\r\n\r\n  const formatHour = (hour: number): string => {\r\n    if (hour === 12) return \"12 PM\"\r\n    if (hour === 0 || hour === 24) return \"12 AM\"\r\n    if (hour > 12) return `${hour - 12} PM`\r\n    return `${hour} AM`\r\n  }\r\n\r\n  if (!mounted || currentData.length === 0) {\r\n    return <div className=\"h-64 w-full flex items-center justify-center\">Loading chart...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-64\">\r\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n        <LineChart data={currentData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n          <CartesianGrid strokeDasharray=\"3 3\" horizontal={true} vertical={false} />\r\n          <XAxis \r\n            dataKey=\"name\"\r\n            axisLine={false} \r\n            tickLine={false} \r\n            tick={{ fontSize: 12, fill: '#6B7280' }}\r\n          />\r\n          <YAxis\r\n            axisLine={false}\r\n            tickLine={false}\r\n            tick={{ fontSize: 12, fill: '#6B7280' }}\r\n            domain={[0, 24]}\r\n            ticks={[0, 6, 12, 18, 24]}\r\n            tickFormatter={formatHour}\r\n          />\r\n          <Tooltip\r\n            formatter={(value: number) => [formatHour(value), \"Peak Hour\"]}\r\n            labelFormatter={(label) => `Date: ${label}`}\r\n            contentStyle={{ \r\n              backgroundColor: 'white',\r\n              borderRadius: \"8px\", \r\n              border: \"1px solid #e2e8f0\",\r\n              padding: \"8px\"\r\n            }}\r\n          />\r\n          <Line\r\n            type=\"monotone\"\r\n            dataKey=\"hour\"\r\n            stroke=\"#F97316\"\r\n            strokeWidth={2}\r\n            dot={{ r: 4, fill: \"#F97316\", strokeWidth: 2, stroke: \"#FFF\" }}\r\n            activeDot={{ r: 6, fill: \"#F97316\", strokeWidth: 2, stroke: \"#FFF\" }}\r\n          />\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 923, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/most-sold-items.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { APISDK } from \"@/libs/api\"\r\n\r\ninterface SoldItem {\r\n  product: string;\r\n  units: number;\r\n}\r\n\r\ninterface MostSoldItemsProps {\r\n  selectedCategory: string;\r\n}\r\n\r\nexport function MostSoldItems({ selectedCategory }: MostSoldItemsProps) {\r\n  const [items, setItems] = useState<SoldItem[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchSoldItems()\r\n  }, [selectedCategory]) // Only re-fetch when category changes\r\n\r\n  const fetchSoldItems = async () => {\r\n    try {\r\n      const api = APISDK.getInstance()\r\n      const response = await api.getAllStats()\r\n      \r\n      // Transform and filter the data based on selected category\r\n      const soldItems = response.data.salesOfAllProducts\r\n        .filter(category => category.category.id === selectedCategory)\r\n        .flatMap(category => \r\n          category.dishes.map(dish => ({\r\n            product: dish.name,\r\n            units: dish.count\r\n          }))\r\n        )\r\n        .sort((a, b) => b.units - a.units)\r\n\r\n      setItems(soldItems)\r\n    } catch (error) {\r\n      console.error('Failed to fetch sold items:', error)\r\n      setItems([])\r\n    }\r\n  }\r\n\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className=\"mb-4 text-center text-gray-500 py-4\">\r\n        No items found for this category\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      <table className=\"w-full\">\r\n        <thead>\r\n          <tr className=\"text-left text-sm text-black\">\r\n            <th className=\"pb-2 font-medium\">Product</th>\r\n            <th className=\"pb-2 font-medium\">Units Sold</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {items.map((item, index) => (\r\n            <tr key={index} className=\"text-gray-700 text-sm\">\r\n              <td className=\"py-2\">{item.product}</td>\r\n              <td className=\"py-2\">{item.units}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;;;AAHA;;;AAcO,SAAS,cAAc,EAAE,gBAAgB,EAAsB;;IACpE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc,EAAE;IAEjD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR;QACF;kCAAG;QAAC;KAAiB,EAAE,sCAAsC;;IAE7D,MAAM,iBAAiB;QACrB,IAAI;YACF,MAAM,MAAM,uIAAA,CAAA,SAAM,CAAC,WAAW;YAC9B,MAAM,WAAW,MAAM,IAAI,WAAW;YAEtC,2DAA2D;YAC3D,MAAM,YAAY,SAAS,IAAI,CAAC,kBAAkB,CAC/C,MAAM,CAAC,CAAA,WAAY,SAAS,QAAQ,CAAC,EAAE,KAAK,kBAC5C,OAAO,CAAC,CAAA,WACP,SAAS,MAAM,CAAC,GAAG,CAAC,CAAA,OAAQ,CAAC;wBAC3B,SAAS,KAAK,IAAI;wBAClB,OAAO,KAAK,KAAK;oBACnB,CAAC,IAEF,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;YAEnC,SAAS;QACX,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;YAC7C,SAAS,EAAE;QACb;IACF;IAEA,IAAI,MAAM,MAAM,KAAK,GAAG;QACtB,qBACE,6LAAC;YAAI,WAAU;sBAAsC;;;;;;IAIzD;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAM,WAAU;;8BACf,6LAAC;8BACC,cAAA,6LAAC;wBAAG,WAAU;;0CACZ,6LAAC;gCAAG,WAAU;0CAAmB;;;;;;0CACjC,6LAAC;gCAAG,WAAU;0CAAmB;;;;;;;;;;;;;;;;;8BAGrC,6LAAC;8BACE,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,6LAAC;4BAAe,WAAU;;8CACxB,6LAAC;oCAAG,WAAU;8CAAQ,KAAK,OAAO;;;;;;8CAClC,6LAAC;oCAAG,WAAU;8CAAQ,KAAK,KAAK;;;;;;;2BAFzB;;;;;;;;;;;;;;;;;;;;;AASrB;GA1DgB;KAAA","debugId":null}},
    {"offset": {"line": 1063, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/product-cards.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { APISDK, IDish } from \"@/libs/api\"\r\n\r\ninterface ProductData {\r\n  name: string;\r\n  units: number;\r\n  image: string;\r\n  id: string;\r\n  category: string;\r\n}\r\n\r\ninterface ProductCardsProps {\r\n  selectedCategory: string;\r\n}\r\n\r\nexport function ProductCards({ selectedCategory }: ProductCardsProps) {\r\n  const [products, setProducts] = useState<ProductData[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    fetchProducts()\r\n  }, [selectedCategory]) // Refetch when category changes\r\n\r\n  const fetchProducts = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const api = APISDK.getInstance()\r\n      const [statsResponse, dishesResponse] = await Promise.all([\r\n        api.getAllStats(),\r\n        api.getDishes()\r\n      ])\r\n\r\n      // Create a map of dish IDs to their pictures and categories\r\n      const dishDetails = new Map(\r\n        dishesResponse.map(dish => [\r\n          dish.id, \r\n          { \r\n            picture: dish.picture,\r\n            category: dish.dish_category_id\r\n          }\r\n        ])\r\n      )\r\n\r\n      // Transform and combine the data\r\n      const productData = statsResponse.data.salesOfAllProducts\r\n        .flatMap(category =>\r\n          category.dishes.map(dish => {\r\n            const details = dishDetails.get(dish.id)\r\n            return {\r\n              id: dish.id,\r\n              name: dish.name,\r\n              units: dish.count,\r\n              image: details?.picture || \"/placeholder.svg\",\r\n              category: details?.category || \"\"\r\n            }\r\n          })\r\n        )\r\n        .filter(product => product.category.toLowerCase() === selectedCategory.toLowerCase())\r\n        .sort((a, b) => b.units - a.units)\r\n\r\n      setProducts(productData)\r\n    } catch (error) {\r\n      console.error('Failed to fetch products:', error)\r\n      setProducts([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-32\">Loading...</div>\r\n  }\r\n\r\n  if (products.length === 0) {\r\n    return <div className=\"flex justify-center items-center h-32\">No products found for this category</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex gap-4 overflow-x-auto pb-2\">\r\n      {products.map((product) => (\r\n        <div key={product.id} className=\"flex-shrink-0 border rounded-lg p-3 flex items-center gap-3 min-w-[200px]\">\r\n          <img\r\n            src={product.image}\r\n            alt={product.name}\r\n            className=\"w-12 h-12 rounded-md object-cover\"\r\n          />\r\n          <div>\r\n            <h4 className=\"font-medium text-orange-500\">{product.name}</h4>\r\n            <p className=\"text-sm text-black\">{product.units} Units sold</p>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;;;AAHA;;;AAiBO,SAAS,aAAa,EAAE,gBAAgB,EAAqB;;IAClE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAC1D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG;QAAC;KAAiB,EAAE,gCAAgC;;IAEvD,MAAM,gBAAgB;QACpB,IAAI;YACF,WAAW;YACX,MAAM,MAAM,uIAAA,CAAA,SAAM,CAAC,WAAW;YAC9B,MAAM,CAAC,eAAe,eAAe,GAAG,MAAM,QAAQ,GAAG,CAAC;gBACxD,IAAI,WAAW;gBACf,IAAI,SAAS;aACd;YAED,4DAA4D;YAC5D,MAAM,cAAc,IAAI,IACtB,eAAe,GAAG,CAAC,CAAA,OAAQ;oBACzB,KAAK,EAAE;oBACP;wBACE,SAAS,KAAK,OAAO;wBACrB,UAAU,KAAK,gBAAgB;oBACjC;iBACD;YAGH,iCAAiC;YACjC,MAAM,cAAc,cAAc,IAAI,CAAC,kBAAkB,CACtD,OAAO,CAAC,CAAA,WACP,SAAS,MAAM,CAAC,GAAG,CAAC,CAAA;oBAClB,MAAM,UAAU,YAAY,GAAG,CAAC,KAAK,EAAE;oBACvC,OAAO;wBACL,IAAI,KAAK,EAAE;wBACX,MAAM,KAAK,IAAI;wBACf,OAAO,KAAK,KAAK;wBACjB,OAAO,SAAS,WAAW;wBAC3B,UAAU,SAAS,YAAY;oBACjC;gBACF,IAED,MAAM,CAAC,CAAA,UAAW,QAAQ,QAAQ,CAAC,WAAW,OAAO,iBAAiB,WAAW,IACjF,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;YAEnC,YAAY;QACd,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;YAC3C,YAAY,EAAE;QAChB,SAAU;YACR,WAAW;QACb;IACF;IAEA,IAAI,SAAS;QACX,qBAAO,6LAAC;YAAI,WAAU;sBAAwC;;;;;;IAChE;IAEA,IAAI,SAAS,MAAM,KAAK,GAAG;QACzB,qBAAO,6LAAC;YAAI,WAAU;sBAAwC;;;;;;IAChE;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;gBAAqB,WAAU;;kCAC9B,6LAAC;wBACC,KAAK,QAAQ,KAAK;wBAClB,KAAK,QAAQ,IAAI;wBACjB,WAAU;;;;;;kCAEZ,6LAAC;;0CACC,6LAAC;gCAAG,WAAU;0CAA+B,QAAQ,IAAI;;;;;;0CACzD,6LAAC;gCAAE,WAAU;;oCAAsB,QAAQ,KAAK;oCAAC;;;;;;;;;;;;;;eAR3C,QAAQ,EAAE;;;;;;;;;;AAc5B;GA/EgB;KAAA","debugId":null}},
    {"offset": {"line": 1208, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/components/ui/select.tsx"],"sourcesContent":["import * as Select from '@radix-ui/react-select'\r\nimport { ChevronDownIcon } from '@radix-ui/react-icons'\r\n\r\ninterface SelectProps {\r\n  options: { label: string; value: string }[]\r\n  defaultValue?: string\r\n  value?: string\r\n  onValueChange?: (value: string) => void\r\n}\r\n\r\nexport function CustomSelect({ options, defaultValue, value, onValueChange }: SelectProps) {\r\n  return (\r\n    <Select.Root \r\n      defaultValue={defaultValue}\r\n      value={value}\r\n      onValueChange={onValueChange}\r\n    >\r\n      <Select.Trigger className=\"inline-flex items-center justify-between bg-white border border-gray-200 rounded-md px-3 py-1.5 text-sm text-gray-800 hover:border-orange-300 focus:border-orange-500 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-orange-500/25 gap-2\">\r\n        <Select.Value />\r\n        <Select.Icon>\r\n          <ChevronDownIcon className=\"h-4 w-4 text-gray-400\" />\r\n        </Select.Icon>\r\n      </Select.Trigger>\r\n\r\n      <Select.Portal>\r\n        <Select.Content className=\"overflow-hidden bg-white border border-gray-200 rounded-md shadow-lg\">\r\n          <Select.Viewport>\r\n            {options.map((option) => (\r\n              <Select.Item\r\n                key={option.value}\r\n                value={option.value}\r\n                className=\"text-sm text-gray-800 px-3 py-2 hover:bg-orange-50 hover:text-orange-700 focus:outline-none focus:bg-orange-50 cursor-pointer\"\r\n              >\r\n                <Select.ItemText>{option.label}</Select.ItemText>\r\n              </Select.Item>\r\n            ))}\r\n          </Select.Viewport>\r\n        </Select.Content>\r\n      </Select.Portal>\r\n    </Select.Root>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AASO,SAAS,aAAa,EAAE,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,aAAa,EAAe;IACvF,qBACE,6LAAC,qKAAA,CAAA,OAAW;QACV,cAAc;QACd,OAAO;QACP,eAAe;;0BAEf,6LAAC,qKAAA,CAAA,UAAc;gBAAC,WAAU;;kCACxB,6LAAC,qKAAA,CAAA,QAAY;;;;;kCACb,6LAAC,qKAAA,CAAA,OAAW;kCACV,cAAA,6LAAC,mLAAA,CAAA,kBAAe;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAI/B,6LAAC,qKAAA,CAAA,SAAa;0BACZ,cAAA,6LAAC,qKAAA,CAAA,UAAc;oBAAC,WAAU;8BACxB,cAAA,6LAAC,qKAAA,CAAA,WAAe;kCACb,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC,qKAAA,CAAA,OAAW;gCAEV,OAAO,OAAO,KAAK;gCACnB,WAAU;0CAEV,cAAA,6LAAC,qKAAA,CAAA,WAAe;8CAAE,OAAO,KAAK;;;;;;+BAJzB,OAAO,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;AAYjC;KA/BgB","debugId":null}},
    {"offset": {"line": 1303, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/j_admin/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\" // Add useEffect import\r\nimport { Breadcrumb } from \"@/components/breadcrumb\"\r\nimport { MetricCards } from \"@/components/metric-cards\"\r\nimport { RevenueChart } from \"@/components/revenue-chart\"\r\nimport { SalesDonutChart } from \"@/components/sales-donut-chart\"\r\nimport PeakHoursChart from \"@/components/peak-hour-chart\"\r\nimport { MostSoldItems } from \"@/components/most-sold-items\"\r\nimport { ProductCards } from \"@/components/product-cards\"\r\nimport { useAuth } from \"@/hooks/useAuth\"\r\nimport { CustomSelect } from \"@/components/ui/select\"\r\nimport { APISDK } from \"@/libs/api\" // Add APISDK import\r\n\r\nconst timeRangeOptions = [\r\n  { label: \"Last 7 Days\", value: \"7d\" },\r\n  { label: \"Last 30 Days\", value: \"30d\" },\r\n  { label: \"Last 90 Days\", value: \"90d\" },\r\n]\r\n\r\nexport default function Dashboard() {\r\n  const { isAuthenticated, isLoading } = useAuth()\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\")\r\n  const [categoryOptions, setCategoryOptions] = useState<{ label: string; value: string }[]>([])\r\n  const [revenueTimeRange, setRevenueTimeRange] = useState(\"7d\")\r\n  const [peakHoursTimeRange, setPeakHoursTimeRange] = useState(\"7d\")\r\n\r\n  useEffect(() => {\r\n    fetchCategoriesAndSetDefault()\r\n  }, [])\r\n\r\n  const fetchCategoriesAndSetDefault = async () => {\r\n    try {\r\n      const api = APISDK.getInstance()\r\n      const [categories, statsResponse] = await Promise.all([\r\n        api.getDishCategories(),\r\n        api.getAllStats()\r\n      ])\r\n      \r\n      const options = categories.map(category => ({\r\n        label: category.name,\r\n        value: category.id\r\n      }))\r\n\r\n      setCategoryOptions(options)\r\n\r\n      // Find the category with most sales\r\n      const categorySales = statsResponse.data.salesOfAllProducts\r\n        .map(category => ({\r\n          id: category.category.id,\r\n          totalSales: category.dishes.reduce((sum, dish) => sum + dish.count, 0)\r\n        }))\r\n        .sort((a, b) => b.totalSales - a.totalSales)\r\n\r\n      // Set the most sold category as default\r\n      if (categorySales.length > 0) {\r\n        setSelectedCategory(categorySales[0].id)\r\n      } else if (options.length > 0) {\r\n        setSelectedCategory(options[0].value)\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch categories:', error)\r\n      setCategoryOptions([])\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <div>You dont have access to this page</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb items={[\"Cafe\", \"Overview\"]} />\r\n      <main className=\"flex-1 p-6\">\r\n        <MetricCards />\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n          <div className=\"bg-white border rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-sm text-gray-500\">Over the days</h3>\r\n              <CustomSelect \r\n                options={timeRangeOptions} \r\n                value={revenueTimeRange}\r\n                onValueChange={setRevenueTimeRange}\r\n              />\r\n            </div>\r\n            <RevenueChart selectedTimeRange={revenueTimeRange} />\r\n          </div>\r\n\r\n          <div className=\"bg-white border rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-sm text-gray-500\">Sales by Category or Products</h3>\r\n            </div>\r\n            <SalesDonutChart />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\r\n          <div className=\"bg-white border rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-sm text-gray-500\">Peak Operating Hours</h3>\r\n              <CustomSelect \r\n                options={timeRangeOptions} \r\n                value={peakHoursTimeRange}\r\n                onValueChange={setPeakHoursTimeRange}\r\n              />\r\n            </div>\r\n            <PeakHoursChart selectedTimeRange={peakHoursTimeRange} />\r\n          </div>\r\n\r\n          <div className=\"bg-white border rounded-lg p-4\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-sm text-gray-500\">Most sold items by Category</h3>\r\n              <CustomSelect \r\n                options={categoryOptions} \r\n                value={selectedCategory}\r\n                onValueChange={setSelectedCategory}\r\n              />\r\n            </div>\r\n            <MostSoldItems selectedCategory={selectedCategory} />\r\n            <ProductCards selectedCategory={selectedCategory} />\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}