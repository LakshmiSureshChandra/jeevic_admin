{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/app/login/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { APISDK } from '@/libs/api';\r\nimport { useRouter } from 'next/navigation';\r\nimport { useAuth } from '@/hooks/useAuth';\r\n\r\n// Define the expected response type\r\ninterface AuthResponse {\r\n    message: string;\r\n    access_token: string;\r\n    // Added more possible response fields\r\n    data?: {\r\n        access_token?: string;\r\n    };\r\n    token?: string;\r\n    success?: boolean;\r\n}\r\n\r\nexport default function Login() {\r\n    const router = useRouter();\r\n    const { isAuthenticated, isLoading, setIsAuthenticated, refreshAuth } = useAuth();\r\n    const [countryCode, setCountryCode] = useState('+91');\r\n    const [phoneNumber, setPhoneNumber] = useState('');\r\n    const [otp, setOtp] = useState('');\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const [isLoggingIn, setIsLoggingIn] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const [success, setSuccess] = useState('');\r\n    \r\n    // Load saved phone number on component mount\r\n    useEffect(() => {\r\n        const savedPhoneNumber = localStorage.getItem('lastPhoneNumber');\r\n        if (savedPhoneNumber) {\r\n            setPhoneNumber(savedPhoneNumber);\r\n        }\r\n    }, []);\r\n    \r\n    // Redirect if user is already authenticated\r\n    useEffect(() => {\r\n        if (isAuthenticated && !isLoading) {\r\n            router.push('/');\r\n        }\r\n    }, [isAuthenticated, isLoading, router]);\r\n\r\n    const handleSendOtp = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        if (!phoneNumber) {\r\n            setError(\"Please enter your phone number\");\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            setIsLoggingIn(true);\r\n            setError('');\r\n            setSuccess('');\r\n            \r\n            // Save the phone number for future logins\r\n            localStorage.setItem('lastPhoneNumber', phoneNumber);\r\n            \r\n            const api = APISDK.getInstance();\r\n            const response = await api.loginRequest(countryCode, phoneNumber);\r\n            \r\n            setIsOtpSent(true);\r\n            setSuccess(response.message || \"OTP sent successfully\");\r\n        } catch (error) {\r\n            console.error('Failed to send OTP:', error);\r\n            setError(\"Failed to send OTP. Please try again.\");\r\n        } finally {\r\n            setIsLoggingIn(false);\r\n        }\r\n    };\r\n\r\n    const extractTokenFromResponse = (response: AuthResponse): string | null => {\r\n        console.log('API Response:', JSON.stringify(response, null, 2));\r\n        \r\n        // Try all possible locations where token might be in the response\r\n        if (response.access_token) {\r\n            return response.access_token;\r\n        } else if (response.token) {\r\n            return response.token;\r\n        } else if (response.data?.access_token) {\r\n            return response.data.access_token;\r\n        }\r\n        \r\n        return null;\r\n    };\r\n\r\n    // Handle login completion and redirection\r\n    const completeLogin = useCallback(() => {\r\n        console.log('Login successful, handling redirection');\r\n        \r\n        // First update our auth state\r\n        if (setIsAuthenticated) {\r\n            setIsAuthenticated(true);\r\n        }\r\n        \r\n        // Then refresh auth state to load user data\r\n        if (refreshAuth) {\r\n            refreshAuth();\r\n        }\r\n        \r\n        // Use window.location for a full page reload to ensure fresh state\r\n        setTimeout(() => {\r\n            console.log('Navigating to home page');\r\n            window.location.href = '/';\r\n        }, 1500);\r\n    }, [setIsAuthenticated, refreshAuth]);\r\n\r\n    const handleVerifyOtp = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        if (!otp) {\r\n            setError(\"Please enter the OTP\");\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            setIsLoggingIn(true);\r\n            setError('');\r\n            setSuccess('');\r\n            const api = APISDK.getInstance();\r\n            \r\n            try {\r\n                // Try to verify the OTP with the API\r\n                const response = await api.verifyAccountAccess(countryCode, phoneNumber, otp) as AuthResponse;\r\n                \r\n                // Log the entire response to see what we're getting\r\n                console.log('OTP Verification Response:', JSON.stringify(response, null, 2));\r\n                \r\n                // Check if the API indicates an invalid OTP\r\n                if (response.message?.toLowerCase().includes(\"invalid otp\")) {\r\n                    throw new Error(\"Invalid OTP. Please check and try again.\");\r\n                }\r\n                \r\n                // Extract access_token from response using our helper function\r\n                const accessToken = extractTokenFromResponse(response);\r\n                \r\n                if (!accessToken) {\r\n                    throw new Error(\"Authentication failed: No access token received from server\");\r\n                }\r\n                \r\n                // Store the token in localStorage with better error handling\r\n                try {\r\n                    console.log('Storing token in localStorage:', accessToken.substring(0, 10) + '...');\r\n                    // First, clear any existing token\r\n                    localStorage.removeItem('access_token');\r\n                    // Then set the new token\r\n                    localStorage.setItem('access_token', accessToken);\r\n                    \r\n                    // Verify token was stored correctly\r\n                    const storedToken = localStorage.getItem('access_token');\r\n                    if (!storedToken) {\r\n                        throw new Error('Failed to verify token was stored correctly');\r\n                    }\r\n                    console.log('Token stored successfully, length:', storedToken.length);\r\n                    \r\n                    setSuccess(\"Login successful\");\r\n                    \r\n                    // Initialize the API with the token\r\n                    APISDK.getInstance(accessToken);\r\n                    \r\n                    // Complete the login process\r\n                    completeLogin();\r\n                } catch (storageError) {\r\n                    console.error('Error storing token in localStorage:', storageError);\r\n                    throw new Error(\"Failed to store authentication token. Please try again.\");\r\n                }\r\n            } catch (verificationError) {\r\n                throw verificationError;\r\n            }\r\n        } catch (error: unknown) {\r\n            console.error('Failed to verify OTP:', error);\r\n            \r\n            // Display the specific error message\r\n            if (error instanceof Error) {\r\n                setError(error.message);\r\n            } else {\r\n                setError(\"Failed to verify OTP. Please try again.\");\r\n            }\r\n            \r\n            // Clear OTP field on error\r\n            setOtp('');\r\n        } finally {\r\n            setIsLoggingIn(false);\r\n        }\r\n    };\r\n\r\n    // Show loading state while checking authentication\r\n    if (isLoading) {\r\n        return (\r\n            <div className=\"flex h-screen items-center justify-center bg-gray-50\">\r\n                <div className=\"text-center\">\r\n                    <div className=\"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-orange-500 rounded-full animate-spin mx-auto mb-4\">\r\n                    </div>\r\n                    <h2 className=\"text-xl font-medium text-gray-700 mb-1\">Loading</h2>\r\n                    <p className=\"text-sm text-gray-500\">Checking your login status...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex h-screen items-center justify-center bg-gray-50\">\r\n            <div className=\"w-full max-w-md bg-white rounded-lg shadow-md p-8 border border-gray-100\">\r\n                <div className=\"mb-8 text-center\">\r\n                    <div className=\"flex justify-center mb-4\">\r\n                        <img src=\"/logo1.svg\" alt=\"JEEVIC Logo\" className=\"h-10\" />\r\n                    </div>\r\n                    <h1 className=\"text-2xl font-medium text-gray-900\">Admin Dashboard</h1>\r\n                    <p className=\"text-gray-500 mt-2 text-sm\">\r\n                        Enter your credentials to access the dashboard\r\n                    </p>\r\n                </div>\r\n                \r\n                {error && (\r\n                    <div className=\"mb-4 p-3 bg-red-50 text-red-700 rounded-md text-sm\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                \r\n                {success && (\r\n                    <div className=\"mb-4 p-3 bg-green-50 text-green-700 rounded-md text-sm\">\r\n                        {success}\r\n                    </div>\r\n                )}\r\n                \r\n                {!isOtpSent ? (\r\n                    <form onSubmit={handleSendOtp} className=\"space-y-4\">\r\n                        <div>\r\n                            <label \r\n                                htmlFor=\"phone\" \r\n                                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                            >\r\n                                Phone Number\r\n                            </label>\r\n                            <div className=\"flex space-x-2\">\r\n                                <select\r\n                                    value={countryCode}\r\n                                    onChange={(e) => setCountryCode(e.target.value)}\r\n                                    className=\"w-28 rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 text-black focus:ring-orange-500 text-sm\"\r\n                                >\r\n                                    <option value=\"+91\">+91</option>\r\n                                </select>\r\n                                <input\r\n                                    id=\"phone\"\r\n                                    type=\"tel\"\r\n                                    placeholder=\"Enter phone number\"\r\n                                    value={phoneNumber}\r\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\r\n                                    className=\"flex-1 rounded-md border text-black placeholder:text-gray-400 border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500 text-sm\"\r\n                                    required\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"w-full bg-orange-500 text-white py-2 px-4 rounded-md hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 transition-colors text-sm font-medium\" \r\n                            disabled={isLoggingIn}\r\n                        >\r\n                            {isLoggingIn ? \"Sending OTP...\" : \"Send OTP\"}\r\n                        </button>\r\n                    </form>\r\n                ) : (\r\n                    <form onSubmit={handleVerifyOtp} className=\"space-y-4\">\r\n                        <div>\r\n                            <label \r\n                                htmlFor=\"otp\" \r\n                                className=\"block text-sm font-medium text-gray-700 mb-1\"\r\n                            >\r\n                                OTP\r\n                            </label>\r\n                            <input\r\n                                id=\"otp\"\r\n                                type=\"text\"\r\n                                placeholder=\"Enter OTP\"\r\n                                value={otp}\r\n                                onChange={(e) => setOtp(e.target.value)}\r\n                                maxLength={6}\r\n                                className=\"w-full text-center text-xl placeholder:text-gray-400 text-black tracking-widest rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500\"\r\n                                required\r\n                            />\r\n                            <p className=\"text-sm text-gray-500 text-center mt-2\">\r\n                                OTP sent to {countryCode} {phoneNumber}\r\n                            </p>\r\n                        </div>\r\n                        <button \r\n                            type=\"submit\" \r\n                            className=\"w-full bg-orange-500 text-white py-2 px-4 rounded-md hover:bg-orange-600 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2 transition-colors text-sm font-medium\" \r\n                            disabled={isLoggingIn}\r\n                        >\r\n                            {isLoggingIn ? \"Verifying...\" : \"Verify OTP\"}\r\n                        </button>\r\n                        \r\n                        <button \r\n                            type=\"button\"\r\n                            className=\"w-full text-orange-500 hover:text-orange-600 underline py-2 text-sm\"\r\n                            onClick={() => {\r\n                                setIsOtpSent(false);\r\n                                setError('');\r\n                                setSuccess('');\r\n                            }}\r\n                            disabled={isLoggingIn}\r\n                        >\r\n                            Change Phone Number\r\n                        </button>\r\n                    </form>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}