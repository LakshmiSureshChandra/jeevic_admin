{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/breadcrumb.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { ChevronRight } from \"lucide-react\"\r\n\r\ninterface BreadcrumbProps {\r\n  items: string[];\r\n}\r\n\r\nexport function Breadcrumb({ items }: BreadcrumbProps) {\r\n  return (\r\n    <div className=\"px-6 pt-3 flex items-center text-sm\">\r\n      {items.map((item, index) => (\r\n        <div key={index} className=\"flex items-center\">\r\n          {index > 0 && <ChevronRight size={16} className=\"mx-2 text-black\" />}\r\n          <Link\r\n            href=\"#\"\r\n            // TODO: Replace '#' with actual item.href if available\r\n\r\n            className={`${\r\n              index === items.length - 1 ? \"text-gray-800 font-medium\" : \"text-black hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            {item}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;gBAAgB,WAAU;;oBACxB,QAAQ,mBAAK,8OAAC,sNAAA,CAAA,eAAY;wBAAC,MAAM;wBAAI,WAAU;;;;;;kCAChD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,uDAAuD;wBAEvD,WAAW,GACT,UAAU,MAAM,MAAM,GAAG,IAAI,8BAA8B,kCAC3D;kCAED;;;;;;;eAVK;;;;;;;;;;AAgBlB","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/operations/category-cards.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { Trash2 } from \"lucide-react\"\r\nimport { useState } from \"react\"\r\nimport { APISDK } from \"@/libs/api\"\r\nimport { usePopup } from \"@/context/popup-context\"\r\n\r\nexport function CategoryCards(\r\n  {\r\n    tabs,\r\n    onCategoryDeleted\r\n  }: Readonly<{\r\n    tabs: ICategoryData[];\r\n    onCategoryDeleted?: () => Promise<void>;\r\n  }>\r\n) {\r\n    const [isDeleting, setIsDeleting] = useState<string | null>(null);\r\n    const { showPopup, showConfirm } = usePopup();\r\n\r\n    if (!tabs) {\r\n        return (\r\n        <div className=\"flex items-center justify-center w-full h-full\">\r\n            <div className=\"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-blue-500 rounded-full animate-spin\">\r\n              Loading...\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n    const handleDeleteCategory = async (categoryId: string, e: React.MouseEvent) => {\r\n      e.stopPropagation(); // Prevent card click event\r\n      \r\n      if (categoryId === \"all-items\") {\r\n        showPopup(\"Cannot delete 'All Items' category\", { type: \"warning\" });\r\n        return;\r\n      }\r\n      \r\n      try {\r\n        // Find out how many dishes are in this category\r\n        const token = localStorage.getItem(\"access_token\");\r\n        const api = APISDK.getInstance(token || \"\");\r\n        const allDishes = await api.getDishes();\r\n        const dishesToDelete = allDishes.filter(dish => dish.dish_category_id === categoryId);\r\n        \r\n        // Get category name\r\n        const category = tabs.find(tab => tab.id === categoryId);\r\n        const categoryName = category ? category.name : \"this category\";\r\n        \r\n        // Ask for confirmation with dish count\r\n        const confirmMessage = `Are you sure you want to delete \"${categoryName}\"? This will also delete ${dishesToDelete.length} dish${dishesToDelete.length !== 1 ? 'es' : ''} in this category.`;\r\n        \r\n        showConfirm(\r\n          confirmMessage,\r\n          async () => {\r\n          setIsDeleting(categoryId);\r\n          \r\n          // Delete all dishes in this category\r\n          const deletePromises = dishesToDelete.map(dish => api.deleteDish(dish.id));\r\n          await Promise.all(deletePromises);\r\n          \r\n          // Then delete the category itself\r\n          await api.deleteDishCategory(categoryId);\r\n          \r\n          console.log(`Deleted category ${categoryId} and ${dishesToDelete.length} associated dishes`);\r\n            \r\n            showPopup(`Successfully deleted \"${categoryName}\" and ${dishesToDelete.length} associated dishes`, { \r\n              type: \"success\" \r\n            });\r\n          \r\n          // Call the callback to refresh data\r\n          if (onCategoryDeleted) {\r\n            await onCategoryDeleted();\r\n          }\r\n          },\r\n          {\r\n            title: \"Delete Category\",\r\n            confirmText: \"Delete\",\r\n            cancelText: \"Cancel\"\r\n        }\r\n        );\r\n      } catch (error) {\r\n        console.error(\"Error deleting category:\", error);\r\n        showPopup(\"Failed to delete category. Please try again.\", { type: \"error\" });\r\n      } finally {\r\n        setIsDeleting(null);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4\">\r\n        {tabs.map((category) => (\r\n          <div key={category.id} className=\"relative overflow-hidden rounded-lg cursor-pointer group\">\r\n            <img\r\n              src={category.image || \"/placeholder.svg\"}\r\n              alt={category.name}\r\n              className=\"w-full h-40 object-cover transition-transform duration-300 group-hover:scale-110\"\r\n            />\r\n            <div className=\"absolute inset-0  flex flex-col justify-end p-3\">\r\n              <h3 className=\"text-white font-bold text-lg\">{category.name}</h3>\r\n              <div className=\"bg-white text-black rounded-full w-6 h-6 flex items-center justify-center text-xs absolute top-3 right-3\">\r\n                {category.count}\r\n              </div>\r\n              \r\n              {/* Delete button - only show for non-ALL ITEMS categories */}\r\n              {category.id !== \"all-items\" && (\r\n                <button \r\n                  onClick={(e) => handleDeleteCategory(category.id, e)}\r\n                  disabled={isDeleting === category.id}\r\n                  className=\"absolute top-3 left-3 p-1.5 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-700\"\r\n                  title=\"Delete category\"\r\n                >\r\n                  {isDeleting === category.id ? (\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                  ) : (\r\n                    <Trash2 size={16} />\r\n                  )}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  }\r\n  "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AALA;;;;;;AAOO,SAAS,cACd,EACE,IAAI,EACJ,iBAAiB,EAIjB;IAEA,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAC5D,MAAM,EAAE,SAAS,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IAE1C,IAAI,CAAC,MAAM;QACP,qBACA,8OAAC;YAAI,WAAU;sBACX,cAAA,8OAAC;gBAAI,WAAU;0BAA6H;;;;;;;;;;;IAKpJ;IAEA,MAAM,uBAAuB,OAAO,YAAoB;QACtD,EAAE,eAAe,IAAI,2BAA2B;QAEhD,IAAI,eAAe,aAAa;YAC9B,UAAU,sCAAsC;gBAAE,MAAM;YAAU;YAClE;QACF;QAEA,IAAI;YACF,gDAAgD;YAChD,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,MAAM,oIAAA,CAAA,SAAM,CAAC,WAAW,CAAC,SAAS;YACxC,MAAM,YAAY,MAAM,IAAI,SAAS;YACrC,MAAM,iBAAiB,UAAU,MAAM,CAAC,CAAA,OAAQ,KAAK,gBAAgB,KAAK;YAE1E,oBAAoB;YACpB,MAAM,WAAW,KAAK,IAAI,CAAC,CAAA,MAAO,IAAI,EAAE,KAAK;YAC7C,MAAM,eAAe,WAAW,SAAS,IAAI,GAAG;YAEhD,uCAAuC;YACvC,MAAM,iBAAiB,CAAC,iCAAiC,EAAE,aAAa,yBAAyB,EAAE,eAAe,MAAM,CAAC,KAAK,EAAE,eAAe,MAAM,KAAK,IAAI,OAAO,GAAG,kBAAkB,CAAC;YAE3L,YACE,gBACA;gBACA,cAAc;gBAEd,qCAAqC;gBACrC,MAAM,iBAAiB,eAAe,GAAG,CAAC,CAAA,OAAQ,IAAI,UAAU,CAAC,KAAK,EAAE;gBACxE,MAAM,QAAQ,GAAG,CAAC;gBAElB,kCAAkC;gBAClC,MAAM,IAAI,kBAAkB,CAAC;gBAE7B,QAAQ,GAAG,CAAC,CAAC,iBAAiB,EAAE,WAAW,KAAK,EAAE,eAAe,MAAM,CAAC,kBAAkB,CAAC;gBAEzF,UAAU,CAAC,sBAAsB,EAAE,aAAa,MAAM,EAAE,eAAe,MAAM,CAAC,kBAAkB,CAAC,EAAE;oBACjG,MAAM;gBACR;gBAEF,oCAAoC;gBACpC,IAAI,mBAAmB;oBACrB,MAAM;gBACR;YACA,GACA;gBACE,OAAO;gBACP,aAAa;gBACb,YAAY;YAChB;QAEF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,UAAU,gDAAgD;gBAAE,MAAM;YAAQ;QAC5E,SAAU;YACR,cAAc;QAChB;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACZ,KAAK,GAAG,CAAC,CAAC,yBACT,8OAAC;gBAAsB,WAAU;;kCAC/B,8OAAC;wBACC,KAAK,SAAS,KAAK,IAAI;wBACvB,KAAK,SAAS,IAAI;wBAClB,WAAU;;;;;;kCAEZ,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAgC,SAAS,IAAI;;;;;;0CAC3D,8OAAC;gCAAI,WAAU;0CACZ,SAAS,KAAK;;;;;;4BAIhB,SAAS,EAAE,KAAK,6BACf,8OAAC;gCACC,SAAS,CAAC,IAAM,qBAAqB,SAAS,EAAE,EAAE;gCAClD,UAAU,eAAe,SAAS,EAAE;gCACpC,WAAU;gCACV,OAAM;0CAEL,eAAe,SAAS,EAAE,iBACzB,8OAAC;oCAAI,WAAU;;;;;yDAEf,8OAAC,0MAAA,CAAA,SAAM;oCAAC,MAAM;;;;;;;;;;;;;;;;;;eAvBd,SAAS,EAAE;;;;;;;;;;AAgC7B","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/operations/item-tabs.tsx"],"sourcesContent":["\"use client\"\r\n\r\nexport function ItemTabs({\r\n  tabs,\r\n  setActiveTab,\r\n  activeTab,\r\n}: Readonly<{\r\n  tabs: ICategoryData[];\r\n  setActiveTab: (tab: string) => void;\r\n  activeTab: string;\r\n}>) {\r\n  if (!tabs) {\r\n    return (\r\n      <div className=\"flex items-center justify-center w-full h-full\">\r\n        <div className=\"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-blue-500 rounded-full animate-spin\">\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"border-b mb-6\">\r\n      <div className=\"flex space-x-6 overflow-x-auto pb-2\">\r\n        {tabs.map((tab) => (\r\n          <button\r\n            key={tab.id}\r\n            className={`pb-2 px-1 font-medium text-sm whitespace-nowrap ${\r\n              activeTab === tab.id\r\n                ? \"text-orange-500 border-b-2 border-orange-500\"\r\n                : \"text-black hover:text-gray-800\"\r\n            }`}\r\n            onClick={() => setActiveTab(tab.id)}\r\n          >\r\n            {tab.name} <span className=\"ml-1 text-xs bg-gray-100 px-1.5 py-0.5 rounded-full\">{tab.count}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,SAAS,SAAS,EACvB,IAAI,EACJ,YAAY,EACZ,SAAS,EAKT;IACA,IAAI,CAAC,MAAM;QACT,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;0BAA6H;;;;;;;;;;;IAKlJ;IAEA,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACZ,KAAK,GAAG,CAAC,CAAC,oBACT,8OAAC;oBAEC,WAAW,CAAC,gDAAgD,EAC1D,cAAc,IAAI,EAAE,GAChB,iDACA,kCACJ;oBACF,SAAS,IAAM,aAAa,IAAI,EAAE;;wBAEjC,IAAI,IAAI;wBAAC;sCAAC,8OAAC;4BAAK,WAAU;sCAAuD,IAAI,KAAK;;;;;;;mBARtF,IAAI,EAAE;;;;;;;;;;;;;;;AAcvB","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/operations/product-grid.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useRef, useEffect } from \"react\"\r\nimport { ChevronRight, Plus, X, Pencil, ArrowUpToLine, Trash2 } from \"lucide-react\"\r\nimport { APISDK, IDish, IDishCategory } from \"@/libs/api\"\r\nimport { usePopup } from \"@/context/popup-context\"\r\n\r\nexport default function ProductGridWithModal({\r\n  isLoading,\r\n  dishes,\r\n  setDishes,\r\n  categories,\r\n  activeTab,\r\n  refreshData,\r\n  onDishDeleted\r\n}: {\r\n  isLoading: boolean\r\n  dishes: IDish[]\r\n  setDishes: (dish: IDish) => void\r\n  categories: IDishCategory[]\r\n  activeTab: string\r\n  refreshData?: () => Promise<void>\r\n  onDishDeleted?: (dishId: string) => void\r\n}) {\r\n  const [filteredDishes, setFilteredDishes] = useState<IDish[]>(dishes)\r\n  const [availability, setAvailability] = useState<Record<string, boolean>>({})\r\n  const [isModalOpen, setIsModalOpen] = useState(false)\r\n  const [isNewProductModalOpen, setIsNewProductModalOpen] = useState(false)\r\n  const [currentProduct, setCurrentProduct] = useState<IDish | null>(null)\r\n  const [isDeletingDish, setIsDeletingDish] = useState<string | null>(null)\r\n  const [editImageFile, setEditImageFile] = useState<File | null>(null);\r\n  const editFileInputRef = useRef<HTMLInputElement>(null);\r\n  const [editedProduct, setEditedProduct] = useState<IDish>({\r\n    name: \"\",\r\n    price: 0,\r\n    dish_category_id: \"\",\r\n    id: \"\",\r\n    is_available: false,\r\n    is_non_veg: false,\r\n    meta_data: {},\r\n    picture: \"\",\r\n    created_at: new Date(),\r\n    updated_at: new Date(),\r\n  })\r\n  const { showPopup, showConfirm } = usePopup()\r\n\r\n  // New product state\r\n  const [newProductName, setNewProductName] = useState('')\r\n  const [newCategoryId, setNewCategoryId] = useState('')\r\n  const [newCategoryName, setNewCategoryName] = useState('')\r\n  const [isNewProductNonVeg, setIsNewProductNonVeg] = useState(false)\r\n  const [isVisible, setIsVisible] = useState(true)\r\n  const [newPrice, setNewPrice] = useState('')\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null)\r\n  const fileInputRef = useRef<HTMLInputElement>(null)\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false)\r\n\r\n  // Filter dishes based on activeTab\r\n  useEffect(() => {\r\n    if (activeTab === \"ALL ITEMS\") {\r\n      setFilteredDishes(dishes)\r\n    } else {\r\n      const selectedCategory = categories.find(category => category.id === activeTab)\r\n      if (selectedCategory) {\r\n        setFilteredDishes(dishes.filter(dish => dish.dish_category_id === selectedCategory.id))\r\n      } else {\r\n        setFilteredDishes(dishes)\r\n      }\r\n    }\r\n  }, [activeTab, dishes, categories])\r\n\r\n  // Initialize availability state when dishes change\r\n  useEffect(() => {\r\n    setAvailability(\r\n      dishes.reduce((acc, product) => {\r\n        acc[product.id] = product.is_available\r\n        return acc\r\n      }, {} as Record<string, boolean>)\r\n    )\r\n  }, [dishes])\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setSelectedFile(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault()\r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      setSelectedFile(e.dataTransfer.files[0])\r\n    }\r\n  }\r\n\r\n  const handleSelectFile = () => {\r\n    fileInputRef.current?.click()\r\n  }\r\n\r\n  const toggleAvailability = async (id: string) => {\r\n    try {\r\n      const dish = dishes.find(d => d.id === id);\r\n      if (!dish) return;\r\n\r\n      const token = localStorage.getItem(\"access_token\");\r\n      const api = APISDK.getInstance(token);\r\n      \r\n      // Update locally first for immediate feedback\r\n      setAvailability((prev) => ({\r\n        ...prev,\r\n        [id]: !prev[id],\r\n      }));\r\n\r\n      // Update on server\r\n      await api.updateDish(id, {\r\n        ...dish,\r\n        is_available: !availability[id]\r\n      });\r\n\r\n      if (refreshData) {\r\n        await refreshData();\r\n      }\r\n    } catch (error) {\r\n      // Revert local state if server update fails\r\n      setAvailability((prev) => ({\r\n        ...prev,\r\n        [id]: !prev[id],\r\n      }));\r\n      showPopup(\"Failed to update availability\", { type: \"error\" });\r\n    }\r\n  }\r\n\r\n  const openEditModal = (product: IDish) => {\r\n    setCurrentProduct(product)\r\n    setEditedProduct(product)\r\n    setIsModalOpen(true)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false)\r\n    setCurrentProduct(null)\r\n  }\r\n\r\n  const closeNewProductModal = () => {\r\n    setIsNewProductModalOpen(false)\r\n    setNewProductName('')\r\n    setNewPrice('')\r\n    setSelectedFile(null)\r\n    setIsVisible(true)\r\n    setIsDropdownOpen(false)\r\n  }\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setEditedProduct(prev => ({\r\n      ...prev,\r\n      [name]: name === \"price\" ? Number(value) || 0 : value\r\n    }))\r\n  }\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (!currentProduct) return\r\n\r\n    closeModal()\r\n  }\r\n\r\n  // Function to handle dish deletion\r\n  const handleDeleteDish = async (dishId: string, e: React.MouseEvent) => {\r\n    e.stopPropagation(); // Prevent card click event\r\n    \r\n    showConfirm(\r\n      \"Are you sure you want to delete this dish?\", \r\n      async () => {\r\n      try {\r\n        setIsDeletingDish(dishId);\r\n        const token = localStorage.getItem(\"access_token\");\r\n        const api = APISDK.getInstance(token || \"\");\r\n        await api.deleteDish(dishId);\r\n        \r\n        // Update local state to remove the dish\r\n        if (onDishDeleted) {\r\n          onDishDeleted(dishId);\r\n        }\r\n        \r\n        // If refreshData is provided, call it to update the dish counts\r\n        if (refreshData) {\r\n          await refreshData();\r\n        }\r\n          \r\n          showPopup(\"Dish deleted successfully\", { type: \"success\" });\r\n      } catch (error) {\r\n        console.error(\"Error deleting dish:\", error);\r\n          showPopup(\"Failed to delete the dish. Please try again.\", { type: \"error\" });\r\n      } finally {\r\n        setIsDeletingDish(null);\r\n      }\r\n      },\r\n      {\r\n        title: \"Delete Dish\",\r\n        confirmText: \"Delete\",\r\n        cancelText: \"Cancel\"\r\n    }\r\n    );\r\n  };\r\n\r\n  const handleNewProductSubmit = async () => {\r\n    const api = APISDK.getInstance();\r\n\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const upload_data = await api.uploadFile(selectedFile);\r\n\r\n      const newProduct: IDish = {\r\n        id: Date.now().toString(),\r\n        name: newProductName,\r\n        price: Number(newPrice) || 0,\r\n        picture: upload_data.url,\r\n        is_available: isVisible,\r\n        dish_category_id: newCategoryId,\r\n        is_non_veg: isNewProductNonVeg,\r\n        meta_data: {},\r\n        created_at: new Date(),\r\n        updated_at: new Date(),\r\n      };\r\n\r\n      const dish = await api.createDish(newProduct);\r\n      \r\n      // Update dishes state\r\n      setDishes(dish);\r\n      \r\n      // If refreshData is provided, call it to update the tabs\r\n      if (refreshData) {\r\n        await refreshData();\r\n      }\r\n      \r\n      closeNewProductModal();\r\n    } catch (error) {\r\n      console.error(\"Error adding new product:\", error);\r\n      // You might want to show an error message to the user here\r\n    }\r\n  };\r\n  const handleUpdateDish = async (dishId: string, updatedData: Partial<IDish>) => {\r\n    try {\r\n      const token = localStorage.getItem(\"access_token\");\r\n      if (!token) {\r\n        showPopup(\"Authentication required\", { type: \"error\" });\r\n        return;\r\n      }\r\n\r\n      const api = APISDK.getInstance(token);\r\n      await api.updateDish(dishId, {\r\n        name: updatedData.name!,\r\n        price: updatedData.price!,\r\n        picture: updatedData.picture!,\r\n        dish_category_id: updatedData.dish_category_id!,\r\n        is_available: updatedData.is_available!,\r\n        is_non_veg: updatedData.is_non_veg!,\r\n        meta_data: updatedData.meta_data || {}\r\n      });\r\n\r\n      // setDishes((prevDishes) => \r\n      //   prevDishes.map((dish) => \r\n      //     dish.id === dishId ? { ...dish, ...updatedData } : dish\r\n      //   )\r\n      // );\r\n\r\n      showPopup(\"Dish updated successfully\", { type: \"success\" });\r\n      \r\n      if (refreshData) {\r\n        await refreshData();\r\n      }\r\n    } catch (error) {\r\n      showPopup(error instanceof Error ? error.message : \"Failed to update dish\", { type: \"error\" });\r\n    }\r\n  };\r\n\r\n  const handleEditImageSelect = () => {\r\n    editFileInputRef.current?.click();\r\n  };\r\n\r\n  // Add this handler for edit image change\r\n  const handleEditImageChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setEditImageFile(e.target.files[0]);\r\n      try {\r\n        const api = APISDK.getInstance();\r\n        const upload_data = await api.uploadFile(e.target.files[0]);\r\n        setEditedProduct(prev => ({\r\n          ...prev,\r\n          picture: upload_data.url\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error uploading image:\", error);\r\n        showPopup(\"Failed to upload image\", { type: \"error\" });\r\n      }\r\n    }\r\n  }; \r\n  if(isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen\">\r\n        <div className=\"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-blue-500 rounded-full animate-spin\">\r\n          Loading...\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n        {filteredDishes.map((product) => (\r\n          <div key={product.id} className=\"border rounded-lg overflow-hidden shadow hover:shadow-md transition-shadow cursor-pointer relative group\" onClick={() => {\r\n            openEditModal(product)\r\n          }}>\r\n            <div className=\"h-48 overflow-hidden\">\r\n              <img src={product.picture} alt={product.name} className=\"w-full h-full object-cover\" />\r\n              {/* Delete button */}\r\n              <button \r\n                onClick={(e) => handleDeleteDish(product.id, e)}\r\n                disabled={isDeletingDish === product.id}\r\n                className=\"absolute top-3 right-3 p-1.5 bg-red-600 text-white rounded-full opacity-0 group-hover:opacity-100 transition-opacity hover:bg-red-700 z-10\"\r\n                title=\"Delete dish\"\r\n              >\r\n                {isDeletingDish === product.id ? (\r\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\r\n                ) : (\r\n                  <Trash2 size={16} />\r\n                )}\r\n              </button>\r\n            </div>\r\n            <div className=\"p-4\">\r\n              <div className=\"flex items-center justify-between mt-2\">\r\n                <h3 className=\"font-medium text-gray-700 text-lg\">{product.name}</h3>\r\n                <p className=\"text-black\">₹ {product.price}</p>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <button className=\"text-orange-500 text-sm flex items-center hover:underline\" >\r\n                  Advanced settings <ChevronRight size={16} />\r\n                </button>\r\n              </div>\r\n              <div className=\"flex items-center justify-between mt-4\">\r\n                <span className=\"text-sm text-black\">\r\n                  {availability[product.id] ? \"Available\" : \"Unavailable\"}\r\n                </span>\r\n                <label className=\"relative inline-flex items-center cursor-pointer\" onClick={(e) => e.stopPropagation()}>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    className=\"sr-only peer\"\r\n                    checked={availability[product.id]}\r\n                    onChange={() => toggleAvailability(product.id)}\r\n                  />\r\n                  <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-orange-500\"></div>\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n\r\n        <div className=\"border rounded-lg overflow-hidden border-dashed flex items-center justify-center h-full min-h-[300px]\">\r\n          <button \r\n            onClick={() => setIsNewProductModalOpen(true)}\r\n            className=\"flex flex-col items-center text-black hover:text-orange-500 transition-colors\"\r\n          >\r\n            <div className=\"w-12 h-12 rounded-full border-2 border-current flex items-center justify-center mb-2\">\r\n              <Plus size={24} />\r\n            </div>\r\n            <span className=\"text-sm\">Add new product</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Edit Modal */}\r\n      {isModalOpen && currentProduct && (\r\n        <div \r\n          className=\"fixed inset-0 bg-black/50 text-gray-800 bg-opacity-50 z-50 flex items-center justify-center p-4\"\r\n          onClick={closeModal} // Add click handler to the backdrop\r\n        >\r\n          <div className=\"bg-white rounded-lg max-w-md w-full overflow-hidden\" onClick={e => e.stopPropagation()}>\r\n          <div className=\"relative\">\r\n    <div className=\"h-48 overflow-hidden\">\r\n      <img \r\n        src={editedProduct.picture} \r\n        alt={editedProduct.name} \r\n        className=\"w-full h-full object-cover\"\r\n      />\r\n      <button \r\n        className=\"absolute top-4 right-4 bg-white rounded-full p-2 shadow-md hover:bg-gray-100\"\r\n        onClick={closeModal}\r\n      >\r\n        <X size={20} className=\"text-gray-800\" />\r\n      </button>\r\n      <button \r\n        onClick={handleEditImageSelect}\r\n        className=\"absolute top-4 left-4 bg-white rounded-lg px-4 py-2 shadow-md hover:bg-gray-100 cursor-pointer\"\r\n      >\r\n        <span>Update Image</span>\r\n      </button>\r\n      <input\r\n        ref={editFileInputRef}\r\n        type=\"file\"\r\n        onChange={handleEditImageChange}\r\n        className=\"hidden\"\r\n        accept=\"image/*\"\r\n      />\r\n    </div>\r\n  </div>\r\n            \r\n            <form onSubmit={handleSubmit} className=\"p-6\">\r\n              <div className=\"space-y-6\">\r\n                <div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <label className=\"block text-gray-500\">Product Name</label>\r\n                    <button type=\"button\" className=\"text-gray-400 hover:text-gray-600\">\r\n                      <Pencil size={16} />\r\n                    </button>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={editedProduct.name}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 p-2 border\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                  \r\n                    <label className=\"block text-gray-500\">Product Category</label>\r\n                  </div>\r\n                  <input\r\n                    type=\"text\"\r\n                    disabled\r\n                    name=\"category\"\r\n                    value={categories.find(cat => cat.id === editedProduct.dish_category_id)?.name || ''}\r\n                    onChange={handleInputChange}\r\n                    className=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 p-2 border\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <label className=\"block text-gray-500\">Product Price</label>\r\n                    <button type=\"button\" className=\"text-gray-400 hover:text-gray-600\">\r\n                      <Pencil size={16} />\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"relative mt-1\">\r\n                    <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none\">\r\n                      ₹\r\n                    </span>\r\n                    <input\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                      value={editedProduct.price}\r\n                      onChange={handleInputChange}\r\n                      className=\"pl-8 block w-full rounded-md border-gray-300 shadow-sm focus:border-orange-500 focus:ring-orange-500 p-2 border\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"mt-8 flex justify-between\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    if (currentProduct) handleDeleteDish(currentProduct.id, e);\r\n                  }}\r\n                  className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-red-500 hover:bg-red-600 flex items-center\"\r\n                  disabled={isDeletingDish === currentProduct.id}\r\n                >\r\n                  {isDeletingDish === currentProduct.id ? (\r\n                    <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\" />\r\n                  ) : (\r\n                    <Trash2 size={16} className=\"mr-2\" />\r\n                  )}\r\n                  Delete Dish\r\n                </button>\r\n                \r\n                <div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={closeModal}\r\n                    className=\"mr-3 px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50\"\r\n                  >\r\n                    Cancel\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-orange-500 hover:bg-orange-600\"\r\n                    onClick={() => handleUpdateDish(editedProduct.id, editedProduct)}\r\n                  >\r\n                    Save Changes\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* New Product Modal */}\r\n      {isNewProductModalOpen && (\r\n        <div \r\n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\"\r\n          onClick={closeNewProductModal} // Add click handler to the backdrop\r\n        >\r\n          <div \r\n            className=\"max-w-md w-full\"\r\n            onClick={(e) => e.stopPropagation()} // Prevent clicks on the modal from closing it\r\n          >\r\n            <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n              <div className=\"p-4\">\r\n                <h2 className=\"font-bold text-gray-800 text-lg mb-4\">Product Details</h2>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-gray-600 text-sm mb-1\">Product Name</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={newProductName}\r\n                    onChange={(e) => setNewProductName(e.target.value)}\r\n                    className=\"w-full p-2 border text-gray-600 border-gray-300 rounded\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-gray-600 text-sm mb-1\">Category Name</label>\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"relative flex-grow\">\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsDropdownOpen(!isDropdownOpen)}\r\n                        className=\"w-full p-2 border border-gray-300 rounded pr-8 text-gray-500 text-left flex justify-between items-center\"\r\n                      >\r\n                        <span>{newCategoryName}</span>\r\n                        <div className=\"text-gray-400\">\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\r\n                            <path d=\"m6 9 6 6 6-6\"/>\r\n                          </svg>\r\n                        </div>\r\n                      </button>\r\n                      \r\n                      {isDropdownOpen && (\r\n                        <div className=\"absolute z-10 w-full mt-1 bg-white border text-gray-500 border-gray-300 rounded-md shadow-lg max-h-60 overflow-auto\">\r\n                          {categories.map((category) => (\r\n                            <div\r\n                              key={category.id}\r\n                              className=\"px-4 py-2 hover:bg-gray-100 cursor-pointer\"\r\n                              onClick={() => {\r\n                                setNewCategoryId(category.id);\r\n                                setNewCategoryName(category.name);\r\n                                setIsDropdownOpen(false);\r\n                              }}\r\n                            >\r\n                              {category.name}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center gap-2 text-sm px-2\">\r\n                      <span className=\"text-gray-600\">Make it visible for the user</span>\r\n                      <button \r\n                        type=\"button\"\r\n                        onClick={() => setIsVisible(!isVisible)}\r\n                        className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none ${isVisible ? 'bg-orange-500' : 'bg-gray-200'}`}\r\n                      >\r\n                        <span \r\n                          className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${isVisible ? 'translate-x-6' : 'translate-x-1'}`}\r\n                        />\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <h3 className=\"font-medium text-gray-800 mb-1\">Product Image</h3>\r\n                  <p className=\"text-gray-500 text-xs mb-2\">This will be the cover image for the users and admins</p>\r\n                  \r\n                  <div \r\n                    className=\"border-2 border-dashed border-gray-300  rounded-md p-6 flex flex-col items-center justify-center\"\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={handleDrop}\r\n                  >\r\n                    <div className=\"w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center mb-2\">\r\n                      <ArrowUpToLine className=\"text-gray-400\" size={20} />\r\n                    </div>\r\n                    \r\n                    <p className=\"text-gray-400 text-sm text-center\">\r\n                      Drag and Drop the Images here or{' '}\r\n                      <button \r\n                        className=\"text-blue-500\"\r\n                        onClick={handleSelectFile}\r\n                      >\r\n                        Select file\r\n                      </button>\r\n                    </p>\r\n                    \r\n                    <input \r\n                      ref={fileInputRef}\r\n                      type=\"file\" \r\n                      onChange={handleFileChange}\r\n                      className=\"hidden\"\r\n                      accept=\"image/*\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <p className=\"text-gray-400 text-xs mt-2\">\r\n                    All formats Supported (PNG, JPG, JPEG, MP4 and MOV)\r\n                  </p>\r\n                </div>\r\n                \r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-gray-600 text-sm mb-1\">Product Price(₹)</label>\r\n                  <input \r\n                    type=\"text\" \r\n                    value={newPrice}\r\n                    onChange={(e) => setNewPrice(e.target.value)}\r\n                    className=\"w-full p-2 border border-gray-300 text-gray-500 rounded\"\r\n                  />\r\n                </div>\r\n\r\n                {/* Non Veg CheckBox */}\r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-gray-600 text-sm mb-1\">Is Non Veg?</label>\r\n                  <input \r\n                    type=\"checkbox\" \r\n                    checked={isNewProductNonVeg}\r\n                    onChange={(e) => setIsNewProductNonVeg(e.target.checked)}\r\n                    className=\"w-full p-2 border border-gray-300 text-gray-500 rounded\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex\">\r\n                <button \r\n                  onClick={closeNewProductModal}\r\n                  className=\"flex-1 py-3 bg-gray-100 text-gray-800 font-medium hover:bg-gray-200 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button \r\n                  onClick={handleNewProductSubmit}\r\n                  className=\"flex-1 bg-orange-500 text-white py-3 font-medium hover:bg-orange-600 transition-colors\"\r\n                >\r\n                  Add Item\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  \r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1503, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/operations/new-category-modal.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useRef } from 'react';\r\nimport { ArrowUpToLine, X } from 'lucide-react';\r\nimport { APISDK, IDishCategory } from '@/libs/api';\r\n\r\ninterface NewCategoryModalProps {\r\n  closeAction: () => void;\r\n  categories: IDishCategory[];\r\n  setCategories: React.Dispatch<React.SetStateAction<IDishCategory[]>>;\r\n  onCategoryAdded?: () => Promise<void>;\r\n}\r\n\r\nexport function NewCategoryModal({closeAction, categories, setCategories, onCategoryAdded }: NewCategoryModalProps) {\r\n  const [categoryName, setCategoryName] = useState('');\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setSelectedFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      setSelectedFile(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSelectFile = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const api = APISDK.getInstance();\r\n\r\n    if (!selectedFile) {\r\n      return;\r\n    }\r\n\r\n    const upload_data = await api.uploadFile(selectedFile);\r\n\r\n    const cat_data = await api.createDishCategory(categoryName, upload_data.url);\r\n\r\n    setCategories([...categories, cat_data]);\r\n\r\n    if (onCategoryAdded) {\r\n      await onCategoryAdded();\r\n    }\r\n  \r\n    closeAction();\r\n  };\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg w-full max-w-md\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-800\">Category Details</h2>\r\n            <button onClick={closeAction} className=\"text-gray-500 hover:text-gray-700\">\r\n              <X size={24} />\r\n            </button>\r\n          </div>\r\n          \r\n          <div className=\"space-y-6\">\r\n            <div>\r\n              <label className=\"block text-gray-600 text-sm mb-1\">Category Name</label>\r\n              <input \r\n                type=\"text\" \r\n                value={categoryName}\r\n                onChange={(e) => setCategoryName(e.target.value)}\r\n                className=\"w-full p-2 border text-gray-400 border-gray-300 rounded\"\r\n                placeholder=\"Enter category name\"\r\n              />\r\n            </div>\r\n            \r\n            <div>\r\n              <label className=\"block text-gray-600 text-sm mb-1\">Category Image</label>\r\n              <p className=\"text-gray-500 text-xs mb-2\">This will be the cover image for the users and admins</p>\r\n              \r\n              <div \r\n                className=\"border-2 border-dashed border-gray-300 rounded p-6 flex flex-col items-center justify-center\"\r\n                onDragOver={handleDragOver}\r\n                onDrop={handleDrop}\r\n              >\r\n                {selectedFile ? (\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-sm text-gray-600 mb-2\">Selected file:</p>\r\n                    <p className=\"text-sm font-medium text-gray-800\">{selectedFile.name}</p>\r\n                  </div>\r\n                ) : (\r\n                  <>\r\n                    <div className=\"w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center mb-2\">\r\n                      <ArrowUpToLine className=\"text-gray-400\" size={20} />\r\n                    </div>\r\n                    <p className=\"text-gray-400 text-sm text-center\">\r\n                      Drag and Drop the images here or{' '}\r\n                      <button \r\n                        type=\"button\"\r\n                        className=\"text-blue-500 hover:text-blue-600\"\r\n                        onClick={handleSelectFile}\r\n                      >\r\n                        Select file\r\n                      </button>\r\n                    </p>\r\n                  </>\r\n                )}\r\n                \r\n                <input \r\n                  ref={fileInputRef}\r\n                  type=\"file\" \r\n                  onChange={handleFileChange}\r\n                  className=\"hidden\"\r\n                  accept=\"image/*\"\r\n                />\r\n              </div>\r\n              \r\n              <p className=\"text-gray-400 text-xs mt-2\">\r\n                All formats Supported (PNG, JPG, JPEG, MP4 and MOV)\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mt-8 flex space-x-3\">\r\n            <button \r\n              onClick={closeAction}\r\n              className=\"flex-1 py-2 border border-gray-300 rounded text-gray-800 hover:bg-gray-50\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button \r\n              onClick={handleSubmit}\r\n              className=\"flex-1 py-2 bg-orange-500 text-white rounded hover:bg-orange-600\"\r\n            >\r\n              Add Category\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1797, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/components/operations/banner-manager.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { APISDK, IBanner } from '@/libs/api';\r\nimport { PlusCircle, Trash2, X } from 'lucide-react';\r\nimport { usePopup } from '@/context/popup-context';\r\n\r\ninterface Banner extends IBanner {\r\n  image_url: string;\r\n}\r\n\r\nexport function BannerManager() {\r\n  const [banners, setBanners] = useState<Banner[]>([]);\r\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\r\n  const [newBannerImage, setNewBannerImage] = useState<File | null>(null);\r\n  const { showPopup } = usePopup();\r\n\r\n  useEffect(() => {\r\n    fetchBanners();\r\n  }, []);\r\n\r\n  const fetchBanners = async () => {\r\n    try {\r\n      const api = APISDK.getInstance();\r\n      const response = await api.getBanners();\r\n      const mappedBanners: Banner[] = response.map(banner => ({\r\n        ...banner,\r\n        image_url: banner.image\r\n      }));\r\n      setBanners(mappedBanners);\r\n    } catch (error) {\r\n      console.error('Error fetching banners:', error);\r\n      showPopup('Failed to fetch banners', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleAddBanner = async () => {\r\n    if (!newBannerImage) {\r\n      showPopup('Please provide an image', { type: 'warning' });\r\n      return;\r\n    }\r\n    try {\r\n      const api = APISDK.getInstance();\r\n      \r\n      const formData = new FormData();\r\n      formData.append('file', newBannerImage);\r\n\r\n      await api.createBanner(formData);\r\n\r\n      setIsAddModalOpen(false);\r\n      setNewBannerImage(null);\r\n      fetchBanners();\r\n      showPopup('Banner added successfully', { type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error adding banner:', error);\r\n      showPopup('Failed to add banner', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  const handleDeleteBanner = async (bannerId: string) => {\r\n    try {\r\n      const api = APISDK.getInstance();\r\n      await api.deleteBanner(bannerId);\r\n      fetchBanners();\r\n      showPopup('Banner deleted successfully', { type: 'success' });\r\n    } catch (error) {\r\n      console.error('Error deleting banner:', error);\r\n      showPopup('Failed to delete banner', { type: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-6\">\r\n      <h2 className=\"text-xl text-black mb-4\">Banner Management</h2>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n        {banners.map((banner) => (\r\n          <div key={banner.id} className=\"border rounded-lg p-4\">\r\n            <img src={banner.image_url} alt=\"Banner\" className=\"w-full h-40 object-cover rounded-lg mb-2\" />\r\n            <div className=\"flex justify-end mt-2\">\r\n              <button onClick={() => handleDeleteBanner(banner.id)} className=\"text-red-500\">\r\n                <Trash2 size={18} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"border rounded-lg p-4 flex items-center justify-center cursor-pointer\" onClick={() => setIsAddModalOpen(true)}>\r\n          <PlusCircle size={24} className=\"text-gray-400\" />\r\n          <span className=\"ml-2 text-gray-400\">Add New Banner</span>\r\n        </div>\r\n      </div>\r\n\r\n      {isAddModalOpen && (\r\n        <div className=\"fixed inset-0  backdrop-blur-sm flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-6 rounded-lg w-96 shadow-xl\">\r\n            <div className=\"flex justify-between items-center mb-4\">\r\n              <h3 className=\"text-lg text-black \">Add New Banner</h3>\r\n              <button onClick={() => setIsAddModalOpen(false)} className=\"text-gray-500 hover:text-gray-700\">\r\n                <X size={24} />\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => setNewBannerImage(e.target.files?.[0] || null)}\r\n              className=\"w-full p-2 border rounded mb-4\"\r\n            />\r\n            <button\r\n              onClick={handleAddBanner}\r\n              className=\"w-full bg-blue-500 text-white p-2 rounded hover:bg-blue-600\"\r\n            >\r\n              Add Banner\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2043, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/chand/OneDrive/Desktop/jeevic_admin/app/operations/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState } from \"react\"\r\nimport { Breadcrumb } from \"@/components/breadcrumb\"\r\nimport { CategoryCards } from \"@/components/operations/category-cards\"\r\nimport { ItemTabs } from \"@/components/operations/item-tabs\"\r\nimport ProductGridWithModal from \"@/components/operations/product-grid\"\r\nimport { PlusCircle } from \"lucide-react\"\r\nimport { NewCategoryModal } from \"../../components/operations/new-category-modal\"\r\nimport { APISDK, IDish, IDishCategory } from \"@/libs/api\"\r\nimport { BannerManager } from \"@/components/operations/banner-manager\"\r\n// Define the interface for category data used in tabs\r\ninterface ICategoryData {\r\n  id: string;\r\n  name: string;\r\n  count: number;\r\n  image: string;\r\n}\r\n\r\nexport default function OperationsPage() {\r\n  const [showNewCategoryModal, setShowNewCategoryModal] = useState(false)\r\n  const [dishes, setDishes] = useState<IDish[]>([])\r\n  const [categories, setCategories] = useState<IDishCategory[]>([]);\r\n  const [tabs, setTabs] = useState<ICategoryData[]>([]);\r\n  const [activeTab, setActiveTab] = useState(\"ALL ITEMS\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const fetchData = async (token: string) => {\r\n    try {\r\n      const api = APISDK.getInstance(token);\r\n      const categoriesData = await api.getDishCategories();\r\n      const dishesData = await api.getDishes();\r\n      \r\n      // Calculate counts for each category\r\n      const categoryCounts = categoriesData.map((category) => ({\r\n        id: category.id,\r\n        name: category.name,\r\n        count: dishesData.filter(dish => dish.dish_category_id === category.id).length,\r\n        image: category.picture || \"/placeholder-image.png\",\r\n      }));\r\n\r\n      // Create tabs with \"ALL ITEMS\" as the first tab\r\n      const allItemsTab: ICategoryData = { \r\n        id: \"all-items\", \r\n        name: \"ALL ITEMS\", \r\n        count: dishesData.length, \r\n        image: \"/menu-card.png\" \r\n      };\r\n      \r\n      setCategories(categoriesData);\r\n      setDishes(dishesData);\r\n      setTabs([allItemsTab, ...categoryCounts]);\r\n      \r\n      // If the active tab no longer exists (category was deleted), reset to \"ALL ITEMS\"\r\n      if (activeTab !== \"ALL ITEMS\" && !categoriesData.some(cat => cat.id === activeTab)) {\r\n        setActiveTab(\"ALL ITEMS\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error);\r\n    }\r\n  }\r\n\r\n  // Function to refresh data after a new category or product is added\r\n  const refreshData = async () => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      await fetchData(token);\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  // Function to handle category deletion\r\n  const handleCategoryDeleted = async () => {\r\n    await refreshData();\r\n    // Always switch to \"ALL ITEMS\" tab after a category is deleted\r\n    setActiveTab(\"ALL ITEMS\");\r\n  };\r\n\r\n  // Function to update tabs when a new dish is added without fetching from API\r\n  const updateTabsAfterDishAdded = (newDish: IDish) => {\r\n    setTabs(prevTabs => {\r\n      return prevTabs.map(tab => {\r\n        // Update the ALL ITEMS tab count\r\n        if (tab.name === \"ALL ITEMS\") {\r\n          return { ...tab, count: tab.count + 1 };\r\n        }\r\n        // Update the specific category tab count\r\n        if (tab.id === newDish.dish_category_id) {\r\n          return { ...tab, count: tab.count + 1 };\r\n        }\r\n        return tab;\r\n      });\r\n    });\r\n  };\r\n\r\n  // Function to handle dish deletion\r\n  const handleDishDeleted = (dishId: string) => {\r\n    // Get the category ID of the deleted dish\r\n    const deletedDish = dishes.find(dish => dish.id === dishId);\r\n    \r\n    // Update dishes state by removing the deleted dish\r\n    setDishes(prevDishes => prevDishes.filter(dish => dish.id !== dishId));\r\n    \r\n    // Update tabs to reflect the deleted dish\r\n    if (deletedDish) {\r\n      setTabs(prevTabs => {\r\n        return prevTabs.map(tab => {\r\n          // Update the ALL ITEMS tab count\r\n          if (tab.name === \"ALL ITEMS\") {\r\n            return { ...tab, count: tab.count - 1 };\r\n          }\r\n          // Update the specific category tab count\r\n          if (tab.id === deletedDish.dish_category_id) {\r\n            return { ...tab, count: tab.count - 1 };\r\n          }\r\n          return tab;\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  // Initial data loading\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"access_token\");\r\n    if (token) {\r\n      fetchData(token)\r\n        .then(() => setIsLoading(false))\r\n        .catch(() => setIsLoading(false));\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Filter dishes based on the active tab\r\n  const getFilteredDishes = () => {\r\n    if (activeTab === \"ALL ITEMS\") {\r\n      return dishes;\r\n    } else {\r\n      const selectedCategory = categories.find(category => category.id === activeTab);\r\n      return selectedCategory \r\n        ? dishes.filter(dish => dish.dish_category_id === selectedCategory.id)\r\n        : dishes;\r\n    }\r\n  };\r\n\r\n  // Handle dish added event\r\n  const handleDishAdded = (newDish: IDish) => {\r\n    setDishes(prev => [...prev, newDish]);\r\n    updateTabsAfterDishAdded(newDish);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb items={[\"Cafe\", \"Operations\"]} />\r\n      <main className=\"flex-1 p-6 \">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <div className=\"flex items-center\">\r\n            <svg\r\n              className=\"h-5 w-5 text-black mr-2\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth={2}\r\n            >\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M4 6h16M4 12h16M4 18h7\" />\r\n            </svg>\r\n            <h2 className=\"text-gray-700 text-lg font-medium\">Menu</h2>\r\n          </div>\r\n          <button \r\n            onClick={() => setShowNewCategoryModal(true)}\r\n            className=\"flex items-center px-4 py-2 bg-gray-100 rounded-full text-sm text-gray-700 font-medium hover:bg-gray-200 transition-colors\"\r\n          >\r\n            <PlusCircle className=\"h-4 w-4 mr-2\" />\r\n            New Category\r\n          </button>\r\n        </div>\r\n\r\n        <CategoryCards \r\n          tabs={tabs} \r\n          onCategoryDeleted={handleCategoryDeleted}\r\n        />\r\n\r\n        <div className=\"mt-8\">\r\n          <h3 className=\"text-lg text-gray-700 font-medium mb-4\">Items</h3>\r\n          <ItemTabs activeTab={activeTab} setActiveTab={setActiveTab} tabs={tabs} />\r\n          <ProductGridWithModal \r\n            isLoading={isLoading} \r\n            dishes={getFilteredDishes()} \r\n            setDishes={handleDishAdded} \r\n            categories={categories} \r\n            activeTab={activeTab}\r\n            refreshData={refreshData}\r\n            onDishDeleted={handleDishDeleted}\r\n          />\r\n        </div>\r\n        <BannerManager />\r\n\r\n        {showNewCategoryModal && (\r\n          <NewCategoryModal \r\n            closeAction={() => setShowNewCategoryModal(false)} \r\n            categories={categories} \r\n            setCategories={setCategories}\r\n            onCategoryAdded={refreshData} \r\n          />\r\n        )}\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}