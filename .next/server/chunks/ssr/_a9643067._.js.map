{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/components/breadcrumb.tsx"],"sourcesContent":["import Link from \"next/link\"\r\nimport { ChevronRight } from \"lucide-react\"\r\n\r\ninterface BreadcrumbProps {\r\n  items: string[];\r\n}\r\n\r\nexport function Breadcrumb({ items }: BreadcrumbProps) {\r\n  return (\r\n    <div className=\"px-6 pt-3 flex items-center text-sm\">\r\n      {items.map((item, index) => (\r\n        <div key={index} className=\"flex items-center\">\r\n          {index > 0 && <ChevronRight size={16} className=\"mx-2 text-black\" />}\r\n          <Link\r\n            href=\"#\"\r\n            // TODO: Replace '#' with actual item.href if available\r\n\r\n            className={`${\r\n              index === items.length - 1 ? \"text-gray-800 font-medium\" : \"text-black hover:text-gray-700\"\r\n            }`}\r\n          >\r\n            {item}\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAMO,SAAS,WAAW,EAAE,KAAK,EAAmB;IACnD,qBACE,8OAAC;QAAI,WAAU;kBACZ,MAAM,GAAG,CAAC,CAAC,MAAM,sBAChB,8OAAC;gBAAgB,WAAU;;oBACxB,QAAQ,mBAAK,8OAAC,sNAAA,CAAA,eAAY;wBAAC,MAAM;wBAAI,WAAU;;;;;;kCAChD,8OAAC,4JAAA,CAAA,UAAI;wBACH,MAAK;wBACL,uDAAuD;wBAEvD,WAAW,GACT,UAAU,MAAM,MAAM,GAAG,IAAI,8BAA8B,kCAC3D;kCAED;;;;;;;eAVK;;;;;;;;;;AAgBlB","debugId":null}},
    {"offset": {"line": 75, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/env.ts"],"sourcesContent":["import { createEnv } from \"@t3-oss/env-nextjs\";\r\nimport { z } from \"zod\";\r\n\r\nexport const env = createEnv({\r\n\tserver: {},\r\n\tclient: {\r\n        NEXT_PUBLIC_API_URL: z.string().url(),\r\n    },\r\n\truntimeEnv: {\r\n        NEXT_PUBLIC_API_URL: process.env.NEXT_PUBLIC_API_URL,\r\n\t},\r\n});\r\n\r\nexport type Env = typeof env;\r\n\r\ndeclare global {\r\n    // eslint-disable-next-line \r\n    namespace NodeJS {\r\n\t\tinterface ProcessEnv {\r\n\t\t\tNEXT_PUBLIC_API_URL: string;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,MAAM,MAAM,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;IAC5B,QAAQ,CAAC;IACT,QAAQ;QACD,qBAAqB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG;IACvC;IACH,YAAY;QACL,mBAAmB;IAC1B;AACD","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/libs/api/index.ts"],"sourcesContent":["import { env } from '@/env';\r\nimport { IAllStats } from './types';\r\nimport type {\r\n  IUser,\r\n  IDishCategory,\r\n  IDish,\r\n  IDineInCheckout,\r\n  IDineInOrder,\r\n  IDineInTableBooking,\r\n  IDineInTable,\r\n  IReview,\r\n  IAssistance,\r\n  IBanner,\r\n  ICategory,ISubCategory,IProduct,ICoupon,ISale\r\n} from './types';\r\nimport { TableStatus } from '@/components/real-time/table-grid';\r\n\r\nexport const LOGIN_URL = `${env.NEXT_PUBLIC_API_URL}/auth/login`;\r\n\r\nexport class APISDK {\r\n  private static instance: APISDK;\r\n  private static readonly BASE_URL = env.NEXT_PUBLIC_API_URL;\r\n  private accessToken: string | null;\r\n\r\n  private constructor(accessToken: string | null) {\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  public static getInstance(\r\n    accessToken?: string | null\r\n  ): APISDK {\r\n    // If an instance already exists, update its token if a new one is provided\r\n    if (APISDK.instance) {\r\n      if (accessToken !== undefined) {\r\n        APISDK.instance.setAccessToken(accessToken);\r\n      }\r\n      return APISDK.instance;\r\n    }\r\n\r\n    // For first initialization, try to get token from localStorage if not provided\r\n    if (accessToken === undefined && typeof window !== 'undefined') {\r\n      try {\r\n        const storedToken = localStorage.getItem('access_token');\r\n        if (storedToken) {\r\n          accessToken = storedToken;\r\n        }\r\n      } catch (error) {\r\n        console.error('APISDK: Error accessing localStorage:', error);\r\n      }\r\n    }\r\n\r\n    // Create a new instance with the provided token\r\n    APISDK.instance = new APISDK(accessToken || null);\r\n    return APISDK.instance;\r\n  }\r\n\r\n  public setAccessToken(accessToken: string | null): void {\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  public async getUser(): Promise<IUser> {\r\n    if (!this.accessToken) {\r\n      console.error('APISDK: No access token available for getUser request');\r\n      throw new Error('Authentication required');\r\n    }\r\n\r\n    \r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/auth/user`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get user: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async loginRequest(\r\n    countryCode: string,\r\n    phoneNumber: string\r\n  ): Promise<{ message: string }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/auth/login-request`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          country_code: countryCode,\r\n          phone_number: phoneNumber,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to login request: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async verifyAccountAccess(\r\n    countryCode: string,\r\n    phoneNumber: string,\r\n    otp: string\r\n  ): Promise<any> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/auth/verify-account-access`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          country_code: countryCode,\r\n          phone_number: phoneNumber,\r\n          otp,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to verify account access: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    // Return the full response to ensure we get the access_token\r\n    return await response.json();\r\n  }\r\n\r\n  public async getDishCategories(): Promise<IDishCategory[]> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/categories`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get dish categories: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async getDishCategoryById(\r\n    dishCategoryId: string\r\n  ): Promise<IDishCategory> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/categories/${dishCategoryId}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get dish category by id: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async getDishById(\r\n    dishId: string\r\n  ): Promise<IDish> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/i/${dishId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get dish by id: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async getDishes(): Promise<IDish[]> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/dishes`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get dishes: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async getDishesByCategoryId(\r\n    dishCategoryId: string\r\n  ): Promise<IDish[]> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/dishes/${dishCategoryId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get dishes by category id: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async createDishCategory(\r\n    name: string,\r\n    picture: string\r\n  ): Promise<IDishCategory> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/categories`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          picture,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create dish category: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateDishCategory\r\n  public async updateDishCategory(\r\n    dishCategoryId: string,\r\n    name: string,\r\n    picture: string\r\n  ): Promise<void> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/categories/${dishCategoryId}`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          picture,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update dish category: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  // deleteDishCategory\r\n  public async deleteDishCategory(\r\n    dishCategoryId: string\r\n  ): Promise<void> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/categories/${dishCategoryId}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete dish category: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  // createDish\r\n  public async createDish({\r\n    name,\r\n    price,\r\n    dish_category_id,\r\n    is_available,\r\n    is_non_veg,\r\n    meta_data,\r\n    picture\r\n  }: {    name: string;\r\n    price: number;\r\n    picture: string;\r\n    dish_category_id: string;\r\n    is_available: boolean;\r\n    is_non_veg: boolean;\r\n    meta_data: object;}\r\n  ): Promise<IDish> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          price,\r\n          picture,\r\n          dish_category_id,\r\n          is_available,\r\n          is_non_veg,\r\n          meta_data,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateDish\r\n  public async updateDish(\r\n    dishId: string,\r\n    {\r\n      name,\r\n      price,\r\n      picture,\r\n      dish_category_id,\r\n      is_available,\r\n      is_non_veg,\r\n      meta_data\r\n    }: {\r\n      name: string;\r\n      price: number;\r\n      picture: string;\r\n      dish_category_id: string;\r\n      is_available: boolean;\r\n      is_non_veg: boolean;\r\n      meta_data: object;\r\n    }\r\n  ): Promise<void> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/${dishId}`,\r\n      {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          name,\r\n          price,\r\n          picture,\r\n          dish_category_id,\r\n          is_available,\r\n          is_non_veg,\r\n          meta_data,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  // deleteDish\r\n  public async deleteDish(dishId: string): Promise<void> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dish/${dishId}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n  }\r\n\r\n  // getTables\r\n  public async getTables(): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable[];\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/tables`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get tables: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getTableById\r\n  public async getTableById(tableId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/tables/${tableId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get table: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getTableByTableNumber\r\n  public async getTableByTableNumber(tableNumber: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/tables/by-no/${tableNumber}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get table: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getBooking\r\n  public async getBooking(bookingId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInTableBooking;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/bookings/${bookingId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get booking: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // createBooking\r\n  public async createBooking(\r\n    {\r\n      table_id,\r\n      booking_date,\r\n      booking_time,\r\n      from_time,\r\n      to_time,\r\n      number_of_people,\r\n    }: {\r\n      table_id: string;\r\n      booking_date: string;\r\n      booking_time: string;\r\n      from_time: string;\r\n      to_time: string;\r\n      number_of_people: number;\r\n    }\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: IDineInTableBooking;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/bookings`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        table_id,\r\n        booking_date,\r\n        booking_time,\r\n        from_time,\r\n        to_time,\r\n        number_of_people,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create booking: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateBooking\r\n  public async updateBooking(\r\n    bookingId: string,\r\n    data: Partial<IDineInTableBooking>\r\n  ): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/bookings/${bookingId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update booking: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // deleteBooking\r\n  public async deleteBooking(bookingId: string): Promise<void> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/bookings/${bookingId}`,\r\n      {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete booking: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markBookingAsCancelled\r\n  public async markBookingAsCancelled(bookingId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/bookings/cancel/${bookingId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark booking as cancelled: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markBookingAsCompleted\r\n  public async markBookingAsCompleted(bookingId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/bookings/complete/${bookingId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark booking as completed: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getOrderById\r\n  public async getOrderById(orderId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/${orderId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get order: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getOrdersByBookingId\r\n  public async getOrdersByBookingId(bookingId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder[];\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/booking/${bookingId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get orders: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getOrdersByUserId\r\n  public async getOrdersByUserId(userId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder[];\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/user/${userId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get orders: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getOrdersByTableId\r\n  public async getOrdersByTableId(tableId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder[];\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/table/${tableId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get orders: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // createOrder\r\n  public async createOrder(orderData: IDineInOrder): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/orders`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(orderData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create order: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markOrderAsCancelled\r\n  public async markOrderAsCancelled(orderId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/cancel/${orderId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark order as cancelled: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getCheckoutById\r\n  public async getCheckoutById(checkoutId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/checkouts/${checkoutId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getCheckoutByBookingId\r\n  public async getCheckoutByBookingId(bookingId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/checkouts/booking/${bookingId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getCheckoutByUserId\r\n  public async getCheckoutByUserId(userId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/checkouts/user/${userId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getCheckoutByTableId\r\n  public async getCheckoutByTableId(tableId: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/checkouts/table/${tableId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // createUserEndCheckout\r\n  public async createUserEndCheckout(booking_id: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/checkouts`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        booking_id,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getAvailableTables\r\n  public async getAvailableTables(fromTime: string, toTime: string): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable[];\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/available-tables`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n        body: JSON.stringify({\r\n          from_time: fromTime,\r\n          to_time: toTime,\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get available tables: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getCheckouts\r\n  public async getCheckouts(): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/checkouts`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get checkouts: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateCheckout\r\n  public async updateCheckout(\r\n    checkoutId: string,\r\n    checkoutData: Partial<IDineInCheckout>\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: IDineInCheckout;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/checkouts/${checkoutId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(checkoutData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // deleteCheckout\r\n  public async deleteCheckout(checkoutId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/checkouts/${checkoutId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete checkout: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getOrders\r\n  public async getOrders(): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/orders`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get orders: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markOrderAsReady\r\n  public async markOrderAsReady(orderId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/ready/${orderId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark order as ready: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markOrderAsServed\r\n  public async markOrderAsServed(orderId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/serve/${orderId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark order as served: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markOrderAsPreparing\r\n  public async markOrderAsPreparing(orderId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/orders/prepare/${orderId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark order as served: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateOrder\r\n  public async updateOrder(orderId: string, data: Partial<IDineInOrder>): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/orders/${orderId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update order: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async updateOrDeleteOrder(orderId: string, data: Partial<IDineInOrder>): Promise<{\r\n    success: boolean;\r\n    data: IDineInOrder;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/orders/update/${orderId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update order: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // deleteOrder\r\n  public async deleteOrder(orderId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/orders/${orderId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete order: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getBookings\r\n  public async getBookings(): Promise<{\r\n    success: boolean;\r\n    data: IDineInTableBooking[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/bookings`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get bookings: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // createTable\r\n  public async createTable(\r\n    {\r\n      table_number,\r\n      capacity,\r\n      meta_data,\r\n  }: {\r\n      table_number: string;\r\n      capacity: number;\r\n      meta_data: {\r\n        status: TableStatus;\r\n        qr_code: string;\r\n      };\r\n  }): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/tables`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        table_number,\r\n        capacity,\r\n        meta_data,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create table: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateTable\r\n  public async updateTable(\r\n    tableId: string,\r\n    {\r\n      table_number,\r\n      capacity,\r\n      meta_data,\r\n    }: {\r\n      table_number: string;\r\n      capacity: number;\r\n      meta_data: object;\r\n    }\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: IDineInTable;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/tables/${tableId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        table_number,\r\n        capacity,\r\n        meta_data,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update table: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // deleteTable\r\n  public async deleteTable(tableId: string): Promise<{\r\n    success: boolean;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/tables/${tableId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete table: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getReviewsByDish\r\n  public async getReviewsByDish(dishId: string): Promise<{\r\n    success: boolean;\r\n    data: IReview[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/d/${dishId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get reviews by dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n   // getReviewsByProduct\r\n   public async getReviewsByProduct(productId: string): Promise<{\r\n    success: boolean;\r\n    data: IReview[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/p/${productId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get reviews by dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getReview\r\n  public async getReview(reviewId: string): Promise<{\r\n    success: boolean;\r\n    data: IReview;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/${reviewId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get review: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // createReview\r\n  public async createReview(\r\n    {\r\n      product_id,\r\n      dish_id,\r\n      rating,\r\n      comment,\r\n      meta_data,\r\n    }: {\r\n      product_id?: string;\r\n      dish_id?: string;\r\n      rating: number;\r\n      comment: string;\r\n      meta_data: object;\r\n    }\r\n  ): Promise<{\r\n    message: string;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        product_id,\r\n        dish_id,\r\n        rating,\r\n        comment,\r\n        meta_data,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to create review: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // deleteReview\r\n  public async deleteReview(reviewId: string): Promise<{\r\n    message: string;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/${reviewId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to delete review: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // updateReview\r\n  public async updateReview(\r\n    reviewId: string,\r\n    {\r\n      rating,\r\n      comment,\r\n      meta_data,\r\n    }: {\r\n      rating?: number;\r\n      comment?: string;\r\n      meta_data?: object;\r\n    }\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: IReview;\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/${reviewId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        rating,\r\n        comment,\r\n        meta_data,\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to update review: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getAverageRatingForDish\r\n  public async getAverageRatingForDish(dishId: string): Promise<{\r\n    success: boolean;\r\n    data: {\r\n      average_rating: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/reviews/avg/d/${dishId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get average rating for dish: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getAverageRatingForProduct\r\n  public async getAverageRatingForProduct(\r\n    productId: string\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: {\r\n      average_rating: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/reviews/avg/p/${productId}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get average rating for product: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  public async uploadFile(file: File): Promise<{\r\n    url: string;\r\n  }> {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    const response = await fetch(`${APISDK.BASE_URL}/upload`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: formData,\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to upload file: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getReservations\r\n  public async getReservations(\r\n    page?: number,\r\n    limit?: number,\r\n  ): Promise<{\r\n    success: boolean;\r\n    data: {\r\n      reservations: IReservation[];\r\n      total: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/reservations?page=${page}&limit=${limit}`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get reservations: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // markTableAsCleaned\r\n  public async markTableAsCleaned(tableId: string): Promise<{\r\n    success: boolean;\r\n    message: string;\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/dine-in/tables/cleaned/${tableId}`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to mark table as cleaned: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getTableStats\r\n  public async getTableStats(): Promise<{\r\n    success: boolean;\r\n    data: IDineInTableStats[];\r\n  }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/dine-in/table-stats`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get table stats: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async getAllAssistance(): Promise<{\r\n    success: boolean;\r\n    data: IAssistance[];\r\n}> {\r\n    const response = await fetch(\r\n        `${APISDK.BASE_URL}/dine-in/assistance`,\r\n        {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.accessToken}`,\r\n            },\r\n        }\r\n    );\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\r\n            `Failed to get assistance: ${response.status} ${response.statusText}`\r\n        );\r\n    }\r\n\r\n    return await response.json();\r\n}\r\n\r\n// deleteAssistance\r\npublic async deleteAssistance(assistanceId: string): Promise<{\r\n    success: boolean;\r\n}> {\r\n    const response = await fetch(\r\n        `${APISDK.BASE_URL}/dine-in/assistance/${assistanceId}`,\r\n        {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${this.accessToken}`,\r\n            },\r\n        }\r\n    );\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\r\n            `Failed to delete assistance: ${response.status} ${response.statusText}`\r\n        );\r\n    }\r\n\r\n    return await response.json();\r\n}\r\n\r\n  // Add this near other user-related methods\r\n  public async getAdminUsers(): Promise<{\r\n    success: boolean;\r\n    data: {\r\n      users: {\r\n        rows: any[];\r\n      };\r\n      total: number;\r\n    };\r\n  }> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/admin/users`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get admin users: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // getAllStats\r\n  public async getAllStats(): Promise<IAllStats> {\r\n    const response = await fetch(\r\n      `${APISDK.BASE_URL}/admin/allstats`,\r\n      {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      throw new Error(\r\n        `Failed to get all stats: ${response.status} ${response.statusText}`\r\n      );\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  // Create banner\r\n  public async createBanner(formData: FormData): Promise<IBanner> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/banner/create`, {\r\n      method: 'POST',\r\n      headers: {\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: formData,\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create banner: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n\r\n  // Get all banners\r\n  public async getBanners(): Promise<IBanner[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/banner`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get banners: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n\r\n  // Delete a banner\r\n  public async deleteBanner(bannerId: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/banner/${bannerId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete banner: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async createEmployee(employeeData: {\r\n    first_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    country_code: string;\r\n    phone_number: string;\r\n    profile_picture: string;\r\n    role: string;\r\n  }): Promise<{ success: boolean; message: string; data?: any }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/admin/staff`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(employeeData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create employee: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async getEmployees(): Promise<{ success: boolean; data: any[] }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/admin/staff`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get employees: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async getEmployeeById(staffId: string): Promise<{ success: boolean; data: any }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/admin/staff/${staffId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get employee: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async updateEmployee(staffId: string, employeeData: Partial<{\r\n    first_name: string;\r\n    last_name: string;\r\n    profile_picture: string;\r\n    role: string;\r\n    phone_number: string;\r\n    email: string;\r\n  }>): Promise<{ success: boolean; message: string; data?: any }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/admin/staff/${staffId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(employeeData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update employee: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async deleteEmployee(staffId: string): Promise<{ success: boolean; message: string }> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/admin/staff/${staffId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete employee: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async createNewCategory(name: string, imageUrl: string[]): Promise<string> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/category`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({ name, image_url: imageUrl }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create category: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.id;\r\n  }\r\n  public async getAllCategories(): Promise<ICategory[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/category`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get categories: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async updateCategory(categoryId: string, name: string, imageUrl: string[]): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/category/${categoryId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({ name, image_url: imageUrl }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update category: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async deleteCategory(categoryId: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/category/${categoryId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete category: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async getCategoryById(categoryId: string): Promise<ICategory> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/category/${categoryId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get category by id: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  //sub categories\r\n  public async createNewSubCategory(name: string, categoryId: string,image_url:string[]): Promise<string> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({ name, category_id: categoryId,image_url }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create subcategory: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n    return data.id;\r\n  }\r\n  public async getAllSubCategories(): Promise<ISubCategory[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get subcategories: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async updateSubCategory(subCategoryId: string, name: string, categoryId: string,image_url:string[]): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory/${subCategoryId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({ name, category_id: categoryId,image_url }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update subcategory: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async deleteSubCategory(subCategoryId: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory/${subCategoryId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete subcategory: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async getSubCategoryById(subCategoryId: string): Promise<ISubCategory> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory/${subCategoryId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get subcategory by id: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async getSubCategoriesByCategoryId(categoryId: string): Promise<ISubCategory[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/subcategory/c/${categoryId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get subcategories by category id: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  // product functions\r\n  public async createProduct({\r\n    name,\r\n    description,\r\n    price,\r\n    image_url,\r\n    category_id,\r\n    subcategory_id,\r\n    meta_data,\r\n    is_active,\r\n    availability_count,\r\n  }: {\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    image_url: string[];\r\n    category_id: string;\r\n    subcategory_id: string;\r\n    meta_data: Record<string, string>;\r\n    is_active: boolean;\r\n    availability_count: number;\r\n  }): Promise<string> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        description,\r\n        price,\r\n        image_url,\r\n        category_id,\r\n        subcategory_id,\r\n        meta_data,\r\n        is_active,\r\n        availability_count,\r\n      }),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create product: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    const data = await response.json();\r\n    return data.id;\r\n  }\r\n  public async updateProduct(product_id: string, data: Record<string, any>): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/${product_id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update product: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async deleteProduct(product_id: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/${product_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete product: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async getProductsByCategory({\r\n    category_id,\r\n    subcategory_id,\r\n  }: {\r\n    category_id?: string;\r\n    subcategory_id?: string;\r\n  }, {\r\n    limit,\r\n    page\r\n  }: {\r\n    page: number,\r\n    limit: number,\r\n  }): Promise<IProduct[]> {\r\n    const query = new URLSearchParams();\r\n    if (category_id) query.append('category_id', category_id);\r\n    if (subcategory_id) query.append('subcategory_id', subcategory_id);\r\n    query.append('limit', limit.toString());\r\n    query.append('page', page.toString());\r\n  \r\n    const response = await fetch(`${APISDK.BASE_URL}/product?${query.toString()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get products: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  \r\n  public async getProductByCategoryId(category_id: string): Promise<IProduct | null> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/c/${category_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get product: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  \r\n  public async getProductBySubCategoryId(subcategory_id: string): Promise<IProduct | null> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/s/${subcategory_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get product: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  \r\n\r\n  public async getProductById(product_id: string): Promise<IProduct | null> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/i/${product_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get product: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  \r\n  public async getProductCount({\r\n    category_id,\r\n    subcategory_id,\r\n  }: {\r\n    category_id?: string;\r\n    subcategory_id?: string;\r\n  }): Promise<number> {\r\n    const query = new URLSearchParams();\r\n    if (category_id) query.append('category_id', category_id);\r\n    if (subcategory_id) query.append('subcategory_id', subcategory_id);\r\n  \r\n    const response = await fetch(`${APISDK.BASE_URL}/product/count?${query.toString()}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get product count: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    const data = await response.json();\r\n    return data.count;\r\n  }\r\n  \r\n  public async getProductsByIds(product_ids: string[]): Promise<IProduct[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/product/ids`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify({ ids: product_ids }),\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get products by ids: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  public async getReviewsByProductId(product_id: string): Promise<IReview[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/review/p/${product_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get products by ids: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  public async deleteReviewById(review_id: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/review/${review_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get products by ids: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  public async averageRatingsByProductId(product_id: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/review/avg/p/${product_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n  \r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get products by ids: ${response.status} ${response.statusText}`);\r\n    }\r\n  \r\n    return await response.json();\r\n  }\r\n  public async getCoupons(): Promise<ICoupon[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/coupon`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get coupons: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async getCoupon(coupon_id: string): Promise<ICoupon> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/coupon/${coupon_id}`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to get coupon: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n  }\r\n  public async createCoupon(data: {\r\n    code: string;\r\n    is_one_time: boolean;\r\n    expires_on: Date;\r\n    no_of_uses: number;\r\n    meta_data: Record<string, string>;\r\n  }): Promise<string> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/coupon`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to create coupon: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    const res = await response.json();\r\n    return res.id;\r\n  }\r\n  public async updateCoupon(\r\n    coupon_id: string,\r\n    data: {\r\n      code: string;\r\n      is_one_time: boolean;\r\n      expires_on: Date;\r\n      no_of_uses: number;\r\n      meta_data: Record<string, string>;\r\n    }\r\n  ): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/coupon/${coupon_id}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to update coupon: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  public async deleteCoupon(coupon_id: string): Promise<void> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/coupon/${coupon_id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to delete coupon: ${response.status} ${response.statusText}`);\r\n    }\r\n  }\r\n  // sales \r\n  public async getSales(): Promise<ISale[]> {\r\n    const response = await fetch(`${APISDK.BASE_URL}/sales`, {\r\n        method: 'GET',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${this.accessToken}`,\r\n        },\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Failed to get sales: ${response.status} ${response.statusText}`);\r\n    }\r\n\r\n    return await response.json();\r\n}\r\npublic async getSale(saleId: string): Promise<ISale> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales/${saleId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to get sale: ${response.status} ${response.statusText}`);\r\n  }\r\n\r\n  return await response.json();\r\n}\r\npublic async getSaleProducts(saleType: string, saleId: string): Promise<any> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales/${saleType}/${saleId}/products`, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to get sale products: ${response.status} ${response.statusText}`);\r\n  }\r\n\r\n  return await response.json();\r\n}\r\npublic async getCurrentSalesOverProduct(productId: string): Promise<any> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales/over/${productId}`, {\r\n      method: 'GET',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to get current sales over product: ${response.status} ${response.statusText}`);\r\n  }\r\n\r\n  return await response.json();\r\n}\r\npublic async createSale(saleData: ISale): Promise<ISale> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(saleData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to create sale: ${response.status} ${response.statusText}`);\r\n  }\r\n\r\n  return await response.json();\r\n}\r\npublic async updateSale(saleId: string, saleData: Partial<ISale>): Promise<void> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales/${saleId}`, {\r\n      method: 'PATCH',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n      body: JSON.stringify(saleData),\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to update sale: ${response.status} ${response.statusText}`);\r\n  }\r\n}\r\npublic async deleteSale(saleId: string): Promise<void> {\r\n  const response = await fetch(`${APISDK.BASE_URL}/sales/${saleId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${this.accessToken}`,\r\n      },\r\n  });\r\n\r\n  if (!response.ok) {\r\n      throw new Error(`Failed to delete sale: ${response.status} ${response.statusText}`);\r\n  }\r\n}\r\n};\r\n\r\n\r\nexport * from \"./types\";"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1739, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/components/promotions/sales-management.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { APISDK } from \"../../libs/api\"; // Import APISDK\r\nimport { ISale } from \"../../libs/api/types\";\r\n// import { EditSaleModal } from \"./edit-sale-modal\";\r\n\r\nexport function SalesManagement() {\r\n  const [sales, setSales] = useState<ISale[]>([]);\r\n  const [editingSale, setEditingSale] = useState<ISale | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadSales();\r\n  }, []);\r\n\r\n  const loadSales = async () => {\r\n    try {\r\n      const salesData = await APISDK.getInstance().getSales(); // Use APISDK to get sales\r\n      setSales(salesData);\r\n    } catch (error) {\r\n      console.error(\"Failed to load sales:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteSale = async (saleId: string) => {\r\n    if (!window.confirm(\"Are you sure you want to delete this sale?\")) {\r\n      return;\r\n    }\r\n    try {\r\n      await APISDK.getInstance().deleteSale(saleId); // Use APISDK to delete sale\r\n      loadSales();\r\n    } catch (error) {\r\n      console.error(\"Failed to delete sale:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setEditingSale({} as ISale)}>Create New Sale</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Start Date</th>\r\n            <th>End Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {sales.map((sale) => (\r\n            <tr key={sale.id}>\r\n              <td>{sale.name}</td>\r\n              <td>{new Date(sale.start_date).toLocaleDateString()}</td>\r\n              <td>{new Date(sale.end_date).toLocaleDateString()}</td>\r\n              <td>\r\n                <button onClick={() => setEditingSale(sale)}>Edit</button>\r\n                <button onClick={() => handleDeleteSale(sale.id)}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {/* {editingSale && (\r\n        <EditSaleModal\r\n          sale={editingSale}\r\n          onClose={() => setEditingSale(null)}\r\n          onSave={loadSales}\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA,0PAAyC,gBAAgB;AAAzD;;;;AAIO,SAAS;IACd,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAC9C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgB;IAE7D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG,EAAE;IAEL,MAAM,YAAY;QAChB,IAAI;YACF,MAAM,YAAY,MAAM,oIAAA,CAAA,SAAM,CAAC,WAAW,GAAG,QAAQ,IAAI,0BAA0B;YACnF,SAAS;QACX,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,yBAAyB;QACzC;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,IAAI,CAAC,OAAO,OAAO,CAAC,+CAA+C;YACjE;QACF;QACA,IAAI;YACF,MAAM,oIAAA,CAAA,SAAM,CAAC,WAAW,GAAG,UAAU,CAAC,SAAS,4BAA4B;YAC3E;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;QAC1C;IACF;IAEA,qBACE,8OAAC;;0BACC,8OAAC;gBAAO,SAAS,IAAM,eAAe,CAAC;0BAAa;;;;;;0BACpD,8OAAC;;kCACC,8OAAC;kCACC,cAAA,8OAAC;;8CACC,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;;;;;;kCAGR,8OAAC;kCACE,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;;kDACC,8OAAC;kDAAI,KAAK,IAAI;;;;;;kDACd,8OAAC;kDAAI,IAAI,KAAK,KAAK,UAAU,EAAE,kBAAkB;;;;;;kDACjD,8OAAC;kDAAI,IAAI,KAAK,KAAK,QAAQ,EAAE,kBAAkB;;;;;;kDAC/C,8OAAC;;0DACC,8OAAC;gDAAO,SAAS,IAAM,eAAe;0DAAO;;;;;;0DAC7C,8OAAC;gDAAO,SAAS,IAAM,iBAAiB,KAAK,EAAE;0DAAG;;;;;;;;;;;;;+BAN7C,KAAK,EAAE;;;;;;;;;;;;;;;;;;;;;;AAqB5B","debugId":null}},
    {"offset": {"line": 1906, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Charan%20Kosari/Desktop/jeevic_admin/app/promotions/page.tsx"],"sourcesContent":["import { Breadcrumb } from \"@/components/breadcrumb\";\r\nimport { SalesManagement } from \"@/components/promotions/sales-management\";\r\n\r\nexport default function PromotionsPage() {\r\n  return (\r\n    <>\r\n      <Breadcrumb items={[\"Convenience\", \"Promotions & Sales\"]} />\r\n      <main className=\"flex-1 p-6\">\r\n        <h1 className=\"text-2xl text-black font-bold\">Promotions & Sales Page</h1>\r\n        <SalesManagement />\r\n      </main>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE;;0BACE,8OAAC,yHAAA,CAAA,aAAU;gBAAC,OAAO;oBAAC;oBAAe;iBAAqB;;;;;;0BACxD,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAG,WAAU;kCAAgC;;;;;;kCAC9C,8OAAC,gJAAA,CAAA,kBAAe;;;;;;;;;;;;;AAIxB","debugId":null}}]
}