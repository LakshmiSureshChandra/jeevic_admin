exports.id=286,exports.ids=[286],exports.modules={4697:(e,t,s)=>{Promise.resolve().then(s.t.bind(s,86346,23)),Promise.resolve().then(s.t.bind(s,27924,23)),Promise.resolve().then(s.t.bind(s,35656,23)),Promise.resolve().then(s.t.bind(s,40099,23)),Promise.resolve().then(s.t.bind(s,38243,23)),Promise.resolve().then(s.t.bind(s,28827,23)),Promise.resolve().then(s.t.bind(s,62763,23)),Promise.resolve().then(s.t.bind(s,97173,23))},14033:(e,t,s)=>{"use strict";s.d(t,{Sidebar:()=>a});let a=(0,s(12907).registerClientReference)(function(){throw Error("Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\components\\sidebar.tsx","Sidebar")},28065:(e,t,s)=>{Promise.resolve().then(s.bind(s,83482)),Promise.resolve().then(s.bind(s,14033)),Promise.resolve().then(s.bind(s,86810)),Promise.resolve().then(s.bind(s,76795))},34073:(e,t,s)=>{Promise.resolve().then(s.t.bind(s,16444,23)),Promise.resolve().then(s.t.bind(s,16042,23)),Promise.resolve().then(s.t.bind(s,88170,23)),Promise.resolve().then(s.t.bind(s,49477,23)),Promise.resolve().then(s.t.bind(s,29345,23)),Promise.resolve().then(s.t.bind(s,12089,23)),Promise.resolve().then(s.t.bind(s,46577,23)),Promise.resolve().then(s.t.bind(s,31307,23))},41977:(e,t,s)=>{"use strict";s.d(t,{AuthContextProvider:()=>n});var a=s(60687),r=s(43210),o=s(48622);let i=(0,r.createContext)(null),n=({children:e})=>{let{isAuthenticated:t,isLoading:s,user:n,setIsAuthenticated:c,setUser:d,refreshAuth:l}=(0,o.A)(),h=(0,r.useMemo)(()=>({user:n,isLoading:s,isAuthenticated:t,setIsAuthenticated:c,setUser:d,refreshAuth:l}),[n,s,t,c,d,l]);return(0,a.jsx)(i.Provider,{value:h,children:e})}},47601:(e,t,s)=>{"use strict";s.d(t,{$:()=>i});var a=s(94238),r=s(45880);let o=(0,a.w)({server:{},client:{NEXT_PUBLIC_API_URL:r.z.string().url()},runtimeEnv:{NEXT_PUBLIC_API_URL:"https://api.jeevic.com"}});class i{static{this.BASE_URL=o.NEXT_PUBLIC_API_URL}constructor(e){this.accessToken=e}static getInstance(e){return i.instance?void 0!==e&&i.instance.setAccessToken(e):i.instance=new i(e||null),i.instance}setAccessToken(e){this.accessToken=e}async getUser(){if(!this.accessToken)throw console.error("APISDK: No access token available for getUser request"),Error("Authentication required");let e=await fetch(`${i.BASE_URL}/auth/user`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get user: ${e.status} ${e.statusText}`);return await e.json()}async loginRequest(e,t){let s=await fetch(`${i.BASE_URL}/auth/login-request`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({country_code:e,phone_number:t})});if(!s.ok)throw Error(`Failed to login request: ${s.status} ${s.statusText}`);return await s.json()}async verifyAccountAccess(e,t,s){let a=await fetch(`${i.BASE_URL}/auth/verify-account-access`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({country_code:e,phone_number:t,otp:s})});if(!a.ok)throw Error(`Failed to verify account access: ${a.status} ${a.statusText}`);return await a.json()}async getDishCategories(){let e=await fetch(`${i.BASE_URL}/dish/categories`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get dish categories: ${e.status} ${e.statusText}`);return await e.json()}async getDishCategoryById(e){let t=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dish category by id: ${t.status} ${t.statusText}`);return await t.json()}async getDishById(e){let t=await fetch(`${i.BASE_URL}/dish/i/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dish by id: ${t.status} ${t.statusText}`);return await t.json()}async getDishes(){let e=await fetch(`${i.BASE_URL}/dish/dishes`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get dishes: ${e.status} ${e.statusText}`);return await e.json()}async getDishesByCategoryId(e){let t=await fetch(`${i.BASE_URL}/dish/dishes/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dishes by category id: ${t.status} ${t.statusText}`);return await t.json()}async createDishCategory(e,t){let s=await fetch(`${i.BASE_URL}/dish/categories`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,picture:t})});if(!s.ok)throw Error(`Failed to create dish category: ${s.status} ${s.statusText}`);return await s.json()}async updateDishCategory(e,t,s){let a=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,picture:s})});if(!a.ok)throw Error(`Failed to update dish category: ${a.status} ${a.statusText}`)}async deleteDishCategory(e){let t=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete dish category: ${t.status} ${t.statusText}`)}async createDish({name:e,price:t,dish_category_id:s,is_available:a,is_non_veg:r,meta_data:o,picture:n}){let c=await fetch(`${i.BASE_URL}/dish`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,price:t,picture:n,dish_category_id:s,is_available:a,is_non_veg:r,meta_data:o})});if(!c.ok)throw Error(`Failed to create dish: ${c.status} ${c.statusText}`);return await c.json()}async updateDish(e,{name:t,price:s,picture:a,dish_category_id:r,is_available:o,is_non_veg:n,meta_data:c}){let d=await fetch(`${i.BASE_URL}/dish/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,price:s,picture:a,dish_category_id:r,is_available:o,is_non_veg:n,meta_data:c})});if(!d.ok)throw Error(`Failed to update dish: ${d.status} ${d.statusText}`)}async deleteDish(e){let t=await fetch(`${i.BASE_URL}/dish/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete dish: ${t.status} ${t.statusText}`)}async getTables(){let e=await fetch(`${i.BASE_URL}/dine-in/tables`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get tables: ${e.status} ${e.statusText}`);return await e.json()}async getTableById(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get table: ${t.status} ${t.statusText}`);return await t.json()}async getTableByTableNumber(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/by-no/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get table: ${t.status} ${t.statusText}`);return await t.json()}async getBooking(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get booking: ${t.status} ${t.statusText}`);return await t.json()}async createBooking({table_id:e,booking_date:t,booking_time:s,from_time:a,to_time:r,number_of_people:o}){let n=await fetch(`${i.BASE_URL}/dine-in/bookings`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_id:e,booking_date:t,booking_time:s,from_time:a,to_time:r,number_of_people:o})});if(!n.ok)throw Error(`Failed to create booking: ${n.status} ${n.statusText}`);return await n.json()}async updateBooking(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!s.ok)throw Error(`Failed to update booking: ${s.status} ${s.statusText}`);return await s.json()}async deleteBooking(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete booking: ${t.status} ${t.statusText}`);return await t.json()}async markBookingAsCancelled(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/cancel/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark booking as cancelled: ${t.status} ${t.statusText}`);return await t.json()}async markBookingAsCompleted(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/complete/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark booking as completed: ${t.status} ${t.statusText}`);return await t.json()}async getOrderById(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get order: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByBookingId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/booking/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByUserId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/user/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByTableId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/table/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async createOrder(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(e)});if(!t.ok)throw Error(`Failed to create order: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsCancelled(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/cancel/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as cancelled: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutById(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByBookingId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/booking/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByUserId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/user/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByTableId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/table/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async createUserEndCheckout(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({booking_id:e})});if(!t.ok)throw Error(`Failed to create checkout: ${t.status} ${t.statusText}`);return await t.json()}async getAvailableTables(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/available-tables`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({from_time:e,to_time:t})});if(!s.ok)throw Error(`Failed to get available tables: ${s.status} ${s.statusText}`);return await s.json()}async getCheckouts(){let e=await fetch(`${i.BASE_URL}/dine-in/checkouts`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get checkouts: ${e.status} ${e.statusText}`);return await e.json()}async updateCheckout(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!s.ok)throw Error(`Failed to update checkout: ${s.status} ${s.statusText}`);return await s.json()}async deleteCheckout(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete checkout: ${t.status} ${t.statusText}`);return await t.json()}async getOrders(){let e=await fetch(`${i.BASE_URL}/dine-in/orders`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get orders: ${e.status} ${e.statusText}`);return await e.json()}async markOrderAsReady(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/ready/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as ready: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsServed(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/serve/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as served: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsPreparing(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/prepare/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as served: ${t.status} ${t.statusText}`);return await t.json()}async updateOrder(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!s.ok)throw Error(`Failed to update order: ${s.status} ${s.statusText}`);return await s.json()}async updateOrDeleteOrder(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/orders/update/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!s.ok)throw Error(`Failed to update order: ${s.status} ${s.statusText}`);return await s.json()}async deleteOrder(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete order: ${t.status} ${t.statusText}`);return await t.json()}async getBookings(){let e=await fetch(`${i.BASE_URL}/dine-in/bookings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get bookings: ${e.status} ${e.statusText}`);return await e.json()}async createTable({table_number:e,capacity:t,meta_data:s}){let a=await fetch(`${i.BASE_URL}/dine-in/tables`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_number:e,capacity:t,meta_data:s})});if(!a.ok)throw Error(`Failed to create table: ${a.status} ${a.statusText}`);return await a.json()}async updateTable(e,{table_number:t,capacity:s,meta_data:a}){let r=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_number:t,capacity:s,meta_data:a})});if(!r.ok)throw Error(`Failed to update table: ${r.status} ${r.statusText}`);return await r.json()}async deleteTable(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete table: ${t.status} ${t.statusText}`);return await t.json()}async getReviewsByDish(e){let t=await fetch(`${i.BASE_URL}/reviews/d/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get reviews by dish: ${t.status} ${t.statusText}`);return await t.json()}async getReviewsByProduct(e){let t=await fetch(`${i.BASE_URL}/reviews/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get reviews by dish: ${t.status} ${t.statusText}`);return await t.json()}async getReview(e){let t=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get review: ${t.status} ${t.statusText}`);return await t.json()}async createReview({product_id:e,dish_id:t,rating:s,comment:a,meta_data:r}){let o=await fetch(`${i.BASE_URL}/reviews`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({product_id:e,dish_id:t,rating:s,comment:a,meta_data:r})});if(!o.ok)throw Error(`Failed to create review: ${o.status} ${o.statusText}`);return await o.json()}async deleteReview(e){let t=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete review: ${t.status} ${t.statusText}`);return await t.json()}async updateReview(e,{rating:t,comment:s,meta_data:a}){let r=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({rating:t,comment:s,meta_data:a})});if(!r.ok)throw Error(`Failed to update review: ${r.status} ${r.statusText}`);return await r.json()}async getAverageRatingForDish(e){let t=await fetch(`${i.BASE_URL}/reviews/avg/d/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get average rating for dish: ${t.status} ${t.statusText}`);return await t.json()}async getAverageRatingForProduct(e){let t=await fetch(`${i.BASE_URL}/reviews/avg/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get average rating for product: ${t.status} ${t.statusText}`);return await t.json()}async uploadFile(e){let t=new FormData;t.append("file",e);let s=await fetch(`${i.BASE_URL}/upload`,{method:"PUT",headers:{Authorization:`Bearer ${this.accessToken}`},body:t});if(!s.ok)throw Error(`Failed to upload file: ${s.status} ${s.statusText}`);return await s.json()}async getReservations(e,t){let s=await fetch(`${i.BASE_URL}/dine-in/reservations?page=${e}&limit=${t}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!s.ok)throw Error(`Failed to get reservations: ${s.status} ${s.statusText}`);return await s.json()}async markTableAsCleaned(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/cleaned/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark table as cleaned: ${t.status} ${t.statusText}`);return await t.json()}async getTableStats(){let e=await fetch(`${i.BASE_URL}/dine-in/table-stats`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get table stats: ${e.status} ${e.statusText}`);return await e.json()}async getAllAssistance(){let e=await fetch(`${i.BASE_URL}/dine-in/assistance`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get assistance: ${e.status} ${e.statusText}`);return await e.json()}async deleteAssistance(e){let t=await fetch(`${i.BASE_URL}/dine-in/assistance/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete assistance: ${t.status} ${t.statusText}`);return await t.json()}async getAdminUsers(){let e=await fetch(`${i.BASE_URL}/admin/users`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get admin users: ${e.status} ${e.statusText}`);return await e.json()}async getAllStats(){let e=await fetch(`${i.BASE_URL}/admin/allstats`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get all stats: ${e.status} ${e.statusText}`);return await e.json()}async createBanner(e){let t=await fetch(`${i.BASE_URL}/banner/create`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`},body:e});if(!t.ok)throw Error(`Failed to create banner: ${t.status} ${t.statusText}`);return await t.json()}async getBanners(){let e=await fetch(`${i.BASE_URL}/banner`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get banners: ${e.status} ${e.statusText}`);return await e.json()}async deleteBanner(e){let t=await fetch(`${i.BASE_URL}/banner/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete banner: ${t.status} ${t.statusText}`)}}},48622:(e,t,s)=>{"use strict";s.d(t,{A:()=>o});var a=s(43210),r=s(47601);let o=()=>{let[e,t]=(0,a.useState)(void 0),[s,o]=(0,a.useState)(!0),[i,n]=(0,a.useState)(!1),[c,d]=(0,a.useState)(null);return(0,a.useEffect)(()=>{try{let e=localStorage.getItem("access_token");e?(d(e),n(!0)):(o(!1),n(!1))}catch(e){console.error("Error accessing localStorage:",e),o(!1),n(!1)}},[]),(0,a.useEffect)(()=>{if(!c)return void o(!1);(async()=>{try{let e=c.startsWith('"')&&c.endsWith('"')?c.slice(1,-1):c,s=r.$.getInstance(e),a=await s.getUser();if(a)t(a),n(!0);else throw Error("Invalid user data received")}catch(e){console.error("Failed to fetch user:",e),e instanceof Error&&"Failed to fetch"!==e.message&&(localStorage.removeItem("access_token"),n(!1),t(void 0))}finally{o(!1)}})()},[c]),{user:e,isLoading:s,isAuthenticated:i,setIsAuthenticated:n,setUser:t,refreshAuth:async()=>{let e=localStorage.getItem("access_token");e&&d(e)}}}},58014:(e,t,s)=>{"use strict";s.r(t),s.d(t,{default:()=>d,metadata:()=>c});var a=s(37413),r=s(14033);s(82704);var o=s(76795),i=s(86810),n=s(83482);let c={title:"JEEVIC",description:"Admin Dashboard"};function d({children:e}){return(0,a.jsx)("html",{lang:"en",children:(0,a.jsx)("body",{children:(0,a.jsx)(o.AuthContextProvider,{children:(0,a.jsx)(i.PopupProvider,{children:(0,a.jsx)(n.AuthGuard,{children:(0,a.jsxs)("div",{className:"flex h-screen bg-white",children:[(0,a.jsx)(r.Sidebar,{}),(0,a.jsx)("div",{className:"flex-1 flex flex-col overflow-auto",children:e})]})})})})})})}},64513:(e,t,s)=>{Promise.resolve().then(s.bind(s,97836)),Promise.resolve().then(s.bind(s,86527)),Promise.resolve().then(s.bind(s,77490)),Promise.resolve().then(s.bind(s,41977))},76795:(e,t,s)=>{"use strict";s.d(t,{AuthContextProvider:()=>a});let a=(0,s(12907).registerClientReference)(function(){throw Error("Attempted to call AuthContextProvider() from the server but AuthContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\provider.tsx","AuthContextProvider")},77490:(e,t,s)=>{"use strict";s.d(t,{PopupProvider:()=>d,O:()=>l});var a=s(60687),r=s(43210),o=s(11860);function i({title:e,message:t,isOpen:s,onClose:i,type:n="info",autoClose:c=!0,autoCloseTime:d=3e3}){let[l,h]=(0,r.useState)(!1);return s||l?(0,a.jsx)("div",{className:"fixed inset-0 flex items-center justify-center z-50 px-4 pointer-events-none",children:(0,a.jsx)("div",{className:`
          ${(()=>{switch(n){case"success":return"bg-green-50 border-green-500 text-green-700";case"error":return"bg-red-50 border-red-500 text-red-700";case"warning":return"bg-yellow-50 border-yellow-500 text-yellow-700";default:return"bg-blue-50 border-blue-500 text-blue-700"}})()} 
          border rounded-lg shadow-lg max-w-md w-full pointer-events-auto
          transition-opacity duration-300 ${l?"opacity-100":"opacity-0"}
        `,children:(0,a.jsxs)("div",{className:"p-4 flex",children:[(0,a.jsx)("div",{className:`flex-shrink-0 ${(()=>{switch(n){case"success":return"text-green-500";case"error":return"text-red-500";case"warning":return"text-yellow-500";default:return"text-blue-500"}})()}`,children:(()=>{switch(n){case"success":return(0,a.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,a.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M5 13l4 4L19 7"})});case"error":return(0,a.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,a.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M6 18L18 6M6 6l12 12"})});case"warning":return(0,a.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,a.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"})});default:return(0,a.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,a.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})})}})()}),(0,a.jsxs)("div",{className:"ml-3 flex-grow",children:[e&&(0,a.jsx)("h3",{className:"text-sm font-medium",children:e}),(0,a.jsx)("div",{className:"text-sm mt-1",children:t})]}),(0,a.jsx)("button",{onClick:()=>{h(!1),setTimeout(i,300)},className:"flex-shrink-0 ml-1 text-gray-400 hover:text-gray-500 focus:outline-none",children:(0,a.jsx)(o.A,{size:18})})]})})}):null}function n({title:e="Confirm Action",message:t,isOpen:s,onConfirm:i,onCancel:n,confirmText:c="Confirm",cancelText:d="Cancel"}){let[l,h]=(0,r.useState)(!1),u=()=>{h(!1),setTimeout(()=>{n()},300)};return s||l?(0,a.jsx)("div",{className:"fixed inset-0 flex items-center justify-center z-50 bg-black/50",children:(0,a.jsx)("div",{className:`
          bg-white border rounded-lg shadow-lg max-w-md w-full
          transition-opacity duration-300 ${l?"opacity-100":"opacity-0"}
          transition-transform duration-300 ${l?"scale-100":"scale-95"}
        `,children:(0,a.jsxs)("div",{className:"p-5",children:[(0,a.jsxs)("div",{className:"flex justify-between items-center mb-4",children:[(0,a.jsx)("h3",{className:"text-lg font-medium text-gray-900",children:e}),(0,a.jsx)("button",{onClick:u,className:"text-gray-400 hover:text-gray-500 focus:outline-none",children:(0,a.jsx)(o.A,{size:20})})]}),(0,a.jsx)("div",{className:"mb-5",children:(0,a.jsx)("p",{className:"text-gray-600",children:t})}),(0,a.jsxs)("div",{className:"flex justify-end space-x-3",children:[(0,a.jsx)("button",{onClick:u,className:"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none",children:d}),(0,a.jsx)("button",{onClick:()=>{h(!1),setTimeout(()=>{i()},300)},className:"px-4 py-2 bg-red-600 border border-transparent rounded-md text-white hover:bg-red-700 focus:outline-none",children:c})]})]})})}):null}let c=(0,r.createContext)(void 0);function d({children:e}){let[t,s]=(0,r.useState)([]),[o,d]=(0,r.useState)(null),l=e=>{s(t=>t.filter(t=>t.id!==e))},h=()=>{d(null)};return(0,a.jsxs)(c.Provider,{value:{showPopup:(e,t={})=>{let a=Date.now().toString(),{title:r,type:o="info",autoClose:i=!0,autoCloseTime:n=3e3}=t;s(t=>[...t,{id:a,message:e,title:r,type:o,autoClose:i,autoCloseTime:n}])},showConfirm:(e,t,s={})=>{let a=Date.now().toString(),{title:r,confirmText:o,cancelText:i}=s;d({id:a,message:e,title:r,confirmText:o,cancelText:i,onConfirm:t})}},children:[e,t.map(e=>(0,a.jsx)(i,{isOpen:!0,message:e.message,title:e.title,type:e.type,autoClose:e.autoClose,autoCloseTime:e.autoCloseTime,onClose:()=>l(e.id)},e.id)),o&&(0,a.jsx)(n,{isOpen:!0,message:o.message,title:o.title,confirmText:o.confirmText,cancelText:o.cancelText,onConfirm:()=>{o.onConfirm(),h()},onCancel:h})]})}function l(){let e=(0,r.useContext)(c);if(void 0===e)throw Error("usePopup must be used within a PopupProvider");return e}},82704:()=>{},83482:(e,t,s)=>{"use strict";s.d(t,{AuthGuard:()=>a});let a=(0,s(12907).registerClientReference)(function(){throw Error("Attempted to call AuthGuard() from the server but AuthGuard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\components\\auth\\auth-guard.tsx","AuthGuard")},86527:(e,t,s)=>{"use strict";s.d(t,{Sidebar:()=>T});var a=s(60687),r=s(85814),o=s.n(r),i=s(16189),n=s(43210),c=s(14952),d=s(47033),l=s(65777),h=s(48730),u=s(84027),p=s(40083),$=s(77490);function m({variant:e="full",className:t=""}){let s=(0,i.useRouter)(),{showConfirm:r}=(0,$.O)(),[o,c]=(0,n.useState)(!1),d=()=>{r("Are you sure you want to log out?",async()=>{try{c(!0),localStorage.removeItem("access_token"),s.push("/login")}finally{c(!1)}},{title:"Logout Confirmation",confirmText:"Logout",cancelText:"Cancel"})};return"icon"===e?(0,a.jsx)("button",{onClick:d,disabled:o,className:`p-2 rounded-md hover:bg-gray-100 ${t}`,title:"Logout",children:(0,a.jsx)(p.A,{size:20})}):(0,a.jsxs)("button",{onClick:d,disabled:o,className:`flex items-center space-x-2 px-4 py-2 rounded-md hover:bg-gray-100 ${t}`,children:[(0,a.jsx)(p.A,{size:18}),(0,a.jsx)("span",{children:o?"Logging out...":"Logout"})]})}var f=s(48622);function T(){let[e,t]=(0,n.useState)(!1),{isAuthenticated:s,user:r,isLoading:o}=(0,f.A)(),i=()=>{t(!e)},p=r?`${r.first_name||""} ${r.last_name||""}`.trim():"Jeevan";return o?(0,a.jsxs)("div",{className:`${e?"w-20":"w-60"} h-screen bg-white border-r flex flex-col transition-all duration-300`,children:[(0,a.jsxs)("div",{className:`${e?"justify-center":"pl-4"} p-4 border-b flex items-center`,children:[!e&&(0,a.jsx)("img",{src:"/logo1.svg",alt:""}),(0,a.jsx)("button",{onClick:i,className:`${e?"ml-0":"ml-auto"} p-1 text-black bg-gray-100 rounded-full hover:bg-gray-100`,children:e?(0,a.jsx)(c.A,{size:20}):(0,a.jsx)(d.A,{size:20})})]}),(0,a.jsx)("div",{className:"flex-1 overflow-auto"})]}):(0,a.jsxs)("div",{className:`${e?"w-20":"w-60"} h-screen bg-white  border-r flex flex-col transition-all duration-300`,children:[(0,a.jsxs)("div",{className:`${e?"justify-center":"pl-4"} p-4 border-b flex items-center`,children:[!e&&(0,a.jsx)("img",{src:"/logo1.svg",alt:""}),(0,a.jsx)("button",{onClick:i,className:`${e?"ml-0":"ml-auto"} p-1 text-black bg-gray-100 rounded-full hover:bg-gray-100`,children:e?(0,a.jsx)(c.A,{size:20}):(0,a.jsx)(d.A,{size:20})})]}),(0,a.jsx)("div",{className:"flex-1 overflow-auto",children:(0,a.jsxs)("div",{className:"py-4",children:[!e&&(0,a.jsx)("div",{className:"px-4 py-2",children:(0,a.jsx)("p",{className:"text-xs text-gray-400 font-medium ",children:"CAFE"})}),(0,a.jsx)(w,{href:"/",icon:(0,a.jsx)(l.A,{size:18}),label:"Overview",collapsed:e}),(0,a.jsx)(w,{href:"/real-time",icon:(0,a.jsx)(h.A,{size:18}),label:"Real-Time view",collapsed:e}),(0,a.jsx)(w,{href:"/operations",icon:(0,a.jsx)(u.A,{size:18}),label:"Operations",collapsed:e})]})}),s&&(0,a.jsx)("div",{className:`p-4 border-t ${e?"flex flex-col items-center":""}`,children:e?(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("div",{className:"w-10 h-10 bg-gray-200 rounded-full overflow-hidden mb-3",children:(0,a.jsx)("img",{src:r?.profile_picture||"/placeholder.svg?height=40&width=40",alt:"User avatar",className:"w-full h-full object-cover"})}),(0,a.jsx)(m,{variant:"icon",className:"text-gray-700 hover:text-orange-500 transition-colors"})]}):(0,a.jsxs)("div",{className:"flex flex-col",children:[(0,a.jsxs)("div",{className:"flex items-center mb-3",children:[(0,a.jsx)("div",{className:"w-10 h-10 bg-gray-200 rounded-full overflow-hidden mr-3",children:(0,a.jsx)("img",{src:r?.profile_picture||"https://i.pinimg.com/736x/d9/7b/bb/d97bbb08017ac2309307f0822e63d082.jpg?height=40&width=40",alt:"User avatar",className:"w-full h-full object-cover"})}),(0,a.jsxs)("div",{children:[(0,a.jsx)("p",{className:"text-sm font-medium text-gray-800",children:p}),(0,a.jsx)("p",{className:"text-xs text-gray-500",children:r?`${r.country_code}${r.phone_number}`:"admin@jeevic.com"})]})]}),(0,a.jsx)(m,{className:"text-sm text-gray-700 hover:text-orange-500 transition-colors"})]})})]})}function w({href:e,icon:t,label:s,collapsed:r}){let n=(0,i.usePathname)()===e&&"#"!==e;return(0,a.jsxs)(o(),{href:e,className:`flex items-center ${r?"justify-center":"px-4"} py-2 text-sm ${n?"bg-orange-500 text-white font-medium":"text-gray-800 hover:bg-gray-100"}`,title:r?s:void 0,children:[(0,a.jsx)("span",{className:r?"":"mr-3",children:t}),!r&&s]})}},86810:(e,t,s)=>{"use strict";s.d(t,{PopupProvider:()=>r});var a=s(12907);let r=(0,a.registerClientReference)(function(){throw Error("Attempted to call PopupProvider() from the server but PopupProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\popup-context.tsx","PopupProvider");(0,a.registerClientReference)(function(){throw Error("Attempted to call usePopup() from the server but usePopup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\popup-context.tsx","usePopup")},97836:(e,t,s)=>{"use strict";s.d(t,{AuthGuard:()=>c});var a=s(60687),r=s(43210),o=s(16189),i=s(48622),n=s(77490);function c({children:e}){let{isAuthenticated:t,isLoading:s,refreshAuth:c}=(0,i.A)();(0,o.useRouter)();let d=(0,o.usePathname)(),{showPopup:l}=(0,n.O)(),[h,u]=(0,r.useState)(!1),[p,$]=(0,r.useState)(!1);return(s||!p)&&"/login"!==d?(console.log("Showing loading state for protected route"),(0,a.jsx)("div",{className:"flex items-center justify-center h-screen bg-gray-50",children:(0,a.jsxs)("div",{className:"text-center",children:[(0,a.jsx)("div",{className:"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-orange-500 rounded-full animate-spin mx-auto mb-4"}),(0,a.jsx)("h2",{className:"text-xl font-medium text-gray-700 mb-1",children:"Loading"}),(0,a.jsx)("p",{className:"text-sm text-gray-500",children:"Verifying your session..."})]})})):"/login"===d||t?(0,a.jsx)(a.Fragment,{children:e}):null}}};