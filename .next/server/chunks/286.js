exports.id=286,exports.ids=[286],exports.modules={4697:(e,t,a)=>{Promise.resolve().then(a.t.bind(a,86346,23)),Promise.resolve().then(a.t.bind(a,27924,23)),Promise.resolve().then(a.t.bind(a,35656,23)),Promise.resolve().then(a.t.bind(a,40099,23)),Promise.resolve().then(a.t.bind(a,38243,23)),Promise.resolve().then(a.t.bind(a,28827,23)),Promise.resolve().then(a.t.bind(a,62763,23)),Promise.resolve().then(a.t.bind(a,97173,23))},14033:(e,t,a)=>{"use strict";a.d(t,{Sidebar:()=>s});let s=(0,a(12907).registerClientReference)(function(){throw Error("Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\components\\sidebar.tsx","Sidebar")},28065:(e,t,a)=>{Promise.resolve().then(a.bind(a,83482)),Promise.resolve().then(a.bind(a,14033)),Promise.resolve().then(a.bind(a,86810)),Promise.resolve().then(a.bind(a,76795))},34073:(e,t,a)=>{Promise.resolve().then(a.t.bind(a,16444,23)),Promise.resolve().then(a.t.bind(a,16042,23)),Promise.resolve().then(a.t.bind(a,88170,23)),Promise.resolve().then(a.t.bind(a,49477,23)),Promise.resolve().then(a.t.bind(a,29345,23)),Promise.resolve().then(a.t.bind(a,12089,23)),Promise.resolve().then(a.t.bind(a,46577,23)),Promise.resolve().then(a.t.bind(a,31307,23))},41977:(e,t,a)=>{"use strict";a.d(t,{AuthContextProvider:()=>n});var s=a(60687),o=a(43210),r=a(48622);let i=(0,o.createContext)(null),n=({children:e})=>{let{isAuthenticated:t,isLoading:a,user:n,setIsAuthenticated:c,setUser:d,refreshAuth:l}=(0,r.A)(),h=(0,o.useMemo)(()=>({user:n??null,isLoading:a,isAuthenticated:t,setIsAuthenticated:c,setUser:d,refreshAuth:l}),[n,a,t,c,d,l]);return(0,s.jsx)(i.Provider,{value:h,children:e})}},47601:(e,t,a)=>{"use strict";a.d(t,{$:()=>i});var s=a(94238),o=a(45880);let r=(0,s.w)({server:{},client:{NEXT_PUBLIC_API_URL:o.z.string().url()},runtimeEnv:{NEXT_PUBLIC_API_URL:"http://localhost:4545"}});class i{static{this.BASE_URL=r.NEXT_PUBLIC_API_URL}constructor(e){this.accessToken=e}static getInstance(e){return i.instance?void 0!==e&&i.instance.setAccessToken(e):i.instance=new i(e||null),i.instance}setAccessToken(e){this.accessToken=e}async getUser(){if(!this.accessToken)throw console.error("APISDK: No access token available for getUser request"),Error("Authentication required");let e=await fetch(`${i.BASE_URL}/auth/user`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get user: ${e.status} ${e.statusText}`);return await e.json()}async loginRequest(e,t){let a=await fetch(`${i.BASE_URL}/auth/login-request`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({country_code:e,phone_number:t})});if(!a.ok)throw Error(`Failed to login request: ${a.status} ${a.statusText}`);return await a.json()}async verifyAccountAccess(e,t,a){let s=await fetch(`${i.BASE_URL}/auth/verify-account-access`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({country_code:e,phone_number:t,otp:a})});if(!s.ok)throw Error(`Failed to verify account access: ${s.status} ${s.statusText}`);return await s.json()}async getDishCategories(){let e=await fetch(`${i.BASE_URL}/dish/categories`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get dish categories: ${e.status} ${e.statusText}`);return await e.json()}async getDishCategoryById(e){let t=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dish category by id: ${t.status} ${t.statusText}`);return await t.json()}async getDishById(e){let t=await fetch(`${i.BASE_URL}/dish/i/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dish by id: ${t.status} ${t.statusText}`);return await t.json()}async getContactMessages(){let e=await fetch(`${i.BASE_URL}/message`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get contact messages: ${e.status} ${e.statusText}`);return await e.json()}async getContactMessageById(e){let t=await fetch(`${i.BASE_URL}/message/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get contact message: ${t.status} ${t.statusText}`);return await t.json()}async updateContactMessageStatus(e,t){let a=await fetch(`${i.BASE_URL}/message/${e}/read`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({is_read:t})});if(!a.ok)throw Error(`Failed to update message status: ${a.status} ${a.statusText}`)}async deleteContactMessage(e){let t=await fetch(`${i.BASE_URL}/message/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete message: ${t.status} ${t.statusText}`)}async getDishes(){let e=await fetch(`${i.BASE_URL}/dish/dishes`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get dishes: ${e.status} ${e.statusText}`);return await e.json()}async getDishesByCategoryId(e){let t=await fetch(`${i.BASE_URL}/dish/dishes/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get dishes by category id: ${t.status} ${t.statusText}`);return await t.json()}async createDishCategory(e,t){let a=await fetch(`${i.BASE_URL}/dish/categories`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,picture:t})});if(!a.ok)throw Error(`Failed to create dish category: ${a.status} ${a.statusText}`);return await a.json()}async updateDishCategory(e,t,a){let s=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,picture:a})});if(!s.ok)throw Error(`Failed to update dish category: ${s.status} ${s.statusText}`)}async deleteDishCategory(e){let t=await fetch(`${i.BASE_URL}/dish/categories/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete dish category: ${t.status} ${t.statusText}`)}async createDish({name:e,price:t,dish_category_id:a,is_available:s,is_non_veg:o,meta_data:r,picture:n}){let c=await fetch(`${i.BASE_URL}/dish`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,price:t,picture:n,dish_category_id:a,is_available:s,is_non_veg:o,meta_data:r})});if(!c.ok)throw Error(`Failed to create dish: ${c.status} ${c.statusText}`);return await c.json()}async updateDish(e,{name:t,price:a,picture:s,dish_category_id:o,is_available:r,is_non_veg:n,meta_data:c}){let d=await fetch(`${i.BASE_URL}/dish/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,price:a,picture:s,dish_category_id:o,is_available:r,is_non_veg:n,meta_data:c})});if(!d.ok)throw Error(`Failed to update dish: ${d.status} ${d.statusText}`)}async deleteDish(e){let t=await fetch(`${i.BASE_URL}/dish/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete dish: ${t.status} ${t.statusText}`)}async getTables(){let e=await fetch(`${i.BASE_URL}/dine-in/tables`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get tables: ${e.status} ${e.statusText}`);return await e.json()}async getTableById(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get table: ${t.status} ${t.statusText}`);return await t.json()}async getTableByTableNumber(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/by-no/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get table: ${t.status} ${t.statusText}`);return await t.json()}async getBooking(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get booking: ${t.status} ${t.statusText}`);return await t.json()}async createBooking({table_id:e,booking_date:t,booking_time:a,from_time:s,to_time:o,number_of_people:r}){let n=await fetch(`${i.BASE_URL}/dine-in/bookings`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_id:e,booking_date:t,booking_time:a,from_time:s,to_time:o,number_of_people:r})});if(!n.ok)throw Error(`Failed to create booking: ${n.status} ${n.statusText}`);return await n.json()}async updateBooking(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"PUT",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update booking: ${a.status} ${a.statusText}`);return await a.json()}async deleteBooking(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete booking: ${t.status} ${t.statusText}`);return await t.json()}async markBookingAsCancelled(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/cancel/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark booking as cancelled: ${t.status} ${t.statusText}`);return await t.json()}async markBookingAsCompleted(e){let t=await fetch(`${i.BASE_URL}/dine-in/bookings/complete/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark booking as completed: ${t.status} ${t.statusText}`);return await t.json()}async getOrderById(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get order: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByBookingId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/booking/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByUserId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/user/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async getOrdersByTableId(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/table/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get orders: ${t.status} ${t.statusText}`);return await t.json()}async createOrder(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(e)});if(!t.ok)throw Error(`Failed to create order: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsCancelled(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/cancel/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as cancelled: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutById(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByBookingId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/booking/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByUserId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/user/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async getCheckoutByTableId(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/table/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get checkout: ${t.status} ${t.statusText}`);return await t.json()}async createUserEndCheckout(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({booking_id:e})});if(!t.ok)throw Error(`Failed to create checkout: ${t.status} ${t.statusText}`);return await t.json()}async getAvailableTables(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/available-tables`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({from_time:e,to_time:t})});if(!a.ok)throw Error(`Failed to get available tables: ${a.status} ${a.statusText}`);return await a.json()}async getCheckouts(){let e=await fetch(`${i.BASE_URL}/dine-in/checkouts`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get checkouts: ${e.status} ${e.statusText}`);return await e.json()}async updateCheckout(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update checkout: ${a.status} ${a.statusText}`);return await a.json()}async deleteCheckout(e){let t=await fetch(`${i.BASE_URL}/dine-in/checkouts/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete checkout: ${t.status} ${t.statusText}`);return await t.json()}async getOrders(){let e=await fetch(`${i.BASE_URL}/dine-in/orders`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get orders: ${e.status} ${e.statusText}`);return await e.json()}async markOrderAsReady(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/ready/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as ready: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsServed(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/serve/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as served: ${t.status} ${t.statusText}`);return await t.json()}async markOrderAsPreparing(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/prepare/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark order as served: ${t.status} ${t.statusText}`);return await t.json()}async updateOrder(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update order: ${a.status} ${a.statusText}`);return await a.json()}async updateOrDeleteOrder(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/orders/update/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update order: ${a.status} ${a.statusText}`);return await a.json()}async deleteOrder(e){let t=await fetch(`${i.BASE_URL}/dine-in/orders/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete order: ${t.status} ${t.statusText}`);return await t.json()}async getBookings(){let e=await fetch(`${i.BASE_URL}/dine-in/bookings`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get bookings: ${e.status} ${e.statusText}`);return await e.json()}async createTable({table_number:e,capacity:t,meta_data:a}){let s=await fetch(`${i.BASE_URL}/dine-in/tables`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_number:e,capacity:t,meta_data:a})});if(!s.ok)throw Error(`Failed to create table: ${s.status} ${s.statusText}`);return await s.json()}async updateTable(e,{table_number:t,capacity:a,meta_data:s}){let o=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({table_number:t,capacity:a,meta_data:s})});if(!o.ok)throw Error(`Failed to update table: ${o.status} ${o.statusText}`);return await o.json()}async deleteTable(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete table: ${t.status} ${t.statusText}`);return await t.json()}async getReviewsByDish(e){let t=await fetch(`${i.BASE_URL}/reviews/d/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get reviews by dish: ${t.status} ${t.statusText}`);return await t.json()}async getReviewsByProduct(e){let t=await fetch(`${i.BASE_URL}/reviews/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get reviews by dish: ${t.status} ${t.statusText}`);return await t.json()}async getReview(e){let t=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get review: ${t.status} ${t.statusText}`);return await t.json()}async createReview({product_id:e,dish_id:t,rating:a,comment:s,meta_data:o}){let r=await fetch(`${i.BASE_URL}/reviews`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({product_id:e,dish_id:t,rating:a,comment:s,meta_data:o})});if(!r.ok)throw Error(`Failed to create review: ${r.status} ${r.statusText}`);return await r.json()}async deleteReview(e){let t=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete review: ${t.status} ${t.statusText}`);return await t.json()}async updateReview(e,{rating:t,comment:a,meta_data:s}){let o=await fetch(`${i.BASE_URL}/reviews/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({rating:t,comment:a,meta_data:s})});if(!o.ok)throw Error(`Failed to update review: ${o.status} ${o.statusText}`);return await o.json()}async getAverageRatingForDish(e){let t=await fetch(`${i.BASE_URL}/reviews/avg/d/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get average rating for dish: ${t.status} ${t.statusText}`);return await t.json()}async getAverageRatingForProduct(e){let t=await fetch(`${i.BASE_URL}/reviews/avg/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get average rating for product: ${t.status} ${t.statusText}`);return await t.json()}async uploadFile(e){let t=new FormData;t.append("file",e);let a=await fetch(`${i.BASE_URL}/upload`,{method:"PUT",headers:{Authorization:`Bearer ${this.accessToken}`},body:t});if(!a.ok)throw Error(`Failed to upload file: ${a.status} ${a.statusText}`);return await a.json()}async getReservations(e,t){let a=await fetch(`${i.BASE_URL}/dine-in/reservations?page=${e}&limit=${t}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!a.ok)throw Error(`Failed to get reservations: ${a.status} ${a.statusText}`);return await a.json()}async markTableAsCleaned(e){let t=await fetch(`${i.BASE_URL}/dine-in/tables/cleaned/${e}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to mark table as cleaned: ${t.status} ${t.statusText}`);return await t.json()}async getTableStats(){let e=await fetch(`${i.BASE_URL}/dine-in/table-stats`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get table stats: ${e.status} ${e.statusText}`);return await e.json()}async getAllAssistance(){let e=await fetch(`${i.BASE_URL}/dine-in/assistance`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get assistance: ${e.status} ${e.statusText}`);return await e.json()}async deleteAssistance(e){let t=await fetch(`${i.BASE_URL}/dine-in/assistance/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete assistance: ${t.status} ${t.statusText}`);return await t.json()}async getAdminUsers(){let e=await fetch(`${i.BASE_URL}/admin/users`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get admin users: ${e.status} ${e.statusText}`);return await e.json()}async getAllStats(){let e=await fetch(`${i.BASE_URL}/admin/allstats`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get all stats: ${e.status} ${e.statusText}`);return await e.json()}async createBanner(e){let t=await fetch(`${i.BASE_URL}/banner/create`,{method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`},body:e});if(!t.ok)throw Error(`Failed to create banner: ${t.status} ${t.statusText}`);return await t.json()}async getBanners(){let e=await fetch(`${i.BASE_URL}/banner`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get banners: ${e.status} ${e.statusText}`);return await e.json()}async deleteBanner(e){let t=await fetch(`${i.BASE_URL}/banner/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete banner: ${t.status} ${t.statusText}`)}async createEmployee(e){let t=await fetch(`${i.BASE_URL}/admin/staff`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(e)});if(!t.ok)throw Error(`Failed to create employee: ${t.status} ${t.statusText}`);return await t.json()}async getEmployees(){let e=await fetch(`${i.BASE_URL}/admin/staff`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get employees: ${e.status} ${e.statusText}`);return await e.json()}async getEmployeeById(e){let t=await fetch(`${i.BASE_URL}/admin/staff/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get employee: ${t.status} ${t.statusText}`);return await t.json()}async updateEmployee(e,t){let a=await fetch(`${i.BASE_URL}/admin/staff/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update employee: ${a.status} ${a.statusText}`);return await a.json()}async deleteEmployee(e){let t=await fetch(`${i.BASE_URL}/admin/staff/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete employee: ${t.status} ${t.statusText}`);return await t.json()}async createNewCategory(e,t){let a=await fetch(`${i.BASE_URL}/category`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,image_url:t})});if(!a.ok)throw Error(`Failed to create category: ${a.status} ${a.statusText}`);return(await a.json()).id}async getAllCategories(){let e=await fetch(`${i.BASE_URL}/category`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get categories: ${e.status} ${e.statusText}`);return await e.json()}async updateCategory(e,t,a){let s=await fetch(`${i.BASE_URL}/category/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,image_url:a})});if(!s.ok)throw Error(`Failed to update category: ${s.status} ${s.statusText}`)}async deleteCategory(e){let t=await fetch(`${i.BASE_URL}/category/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete category: ${t.status} ${t.statusText}`)}async getCategoryById(e){let t=await fetch(`${i.BASE_URL}/category/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get category by id: ${t.status} ${t.statusText}`);return await t.json()}async createNewSubCategory(e,t,a){let s=await fetch(`${i.BASE_URL}/subcategory`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,category_id:t,image_url:a})});if(!s.ok)throw Error(`Failed to create subcategory: ${s.status} ${s.statusText}`);return(await s.json()).id}async getAllSubCategories(){let e=await fetch(`${i.BASE_URL}/subcategory`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get subcategories: ${e.status} ${e.statusText}`);return await e.json()}async updateSubCategory(e,t,a,s){let o=await fetch(`${i.BASE_URL}/subcategory/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:t,category_id:a,image_url:s})});if(!o.ok)throw Error(`Failed to update subcategory: ${o.status} ${o.statusText}`)}async deleteSubCategory(e){let t=await fetch(`${i.BASE_URL}/subcategory/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete subcategory: ${t.status} ${t.statusText}`)}async getSubCategoryById(e){let t=await fetch(`${i.BASE_URL}/subcategory/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get subcategory by id: ${t.status} ${t.statusText}`);return await t.json()}async getSubCategoriesByCategoryId(e){let t=await fetch(`${i.BASE_URL}/subcategory/c/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get subcategories by category id: ${t.status} ${t.statusText}`);return await t.json()}async createProduct({name:e,description:t,price:a,image_url:s,category_id:o,subcategory_id:r,meta_data:n,is_active:c,availability_count:d}){let l=await fetch(`${i.BASE_URL}/product`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({name:e,description:t,price:a,image_url:s,category_id:o,subcategory_id:r,meta_data:n,is_active:c,availability_count:d})});if(!l.ok)throw Error(`Failed to create product: ${l.status} ${l.statusText}`);return(await l.json()).id}async updateProduct(e,t){let a=await fetch(`${i.BASE_URL}/product/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update product: ${a.status} ${a.statusText}`)}async deleteProduct(e){let t=await fetch(`${i.BASE_URL}/product/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete product: ${t.status} ${t.statusText}`)}async getProductsByCategory({category_id:e,subcategory_id:t},{limit:a,page:s}){let o=new URLSearchParams;e&&o.append("category_id",e),t&&o.append("subcategory_id",t),o.append("limit",a.toString()),o.append("page",s.toString());let r=await fetch(`${i.BASE_URL}/product?${o.toString()}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!r.ok)throw Error(`Failed to get products: ${r.status} ${r.statusText}`);return await r.json()}async getProductByCategoryId(e){let t=await fetch(`${i.BASE_URL}/product/c/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get product: ${t.status} ${t.statusText}`);return await t.json()}async getProductBySubCategoryId(e){let t=await fetch(`${i.BASE_URL}/product/s/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get product: ${t.status} ${t.statusText}`);return await t.json()}async getProductById(e){let t=await fetch(`${i.BASE_URL}/product/i/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get product: ${t.status} ${t.statusText}`);return await t.json()}async getProductCount({category_id:e,subcategory_id:t}){let a=new URLSearchParams;e&&a.append("category_id",e),t&&a.append("subcategory_id",t);let s=await fetch(`${i.BASE_URL}/product/count?${a.toString()}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!s.ok)throw Error(`Failed to get product count: ${s.status} ${s.statusText}`);return(await s.json()).count}async getProductsByIds(e){let t=await fetch(`${i.BASE_URL}/product/ids`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify({ids:e})});if(!t.ok)throw Error(`Failed to get products by ids: ${t.status} ${t.statusText}`);return await t.json()}async getReviewsByProductId(e){let t=await fetch(`${i.BASE_URL}/review/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get products by ids: ${t.status} ${t.statusText}`);return await t.json()}async deleteReviewById(e){let t=await fetch(`${i.BASE_URL}/review/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get products by ids: ${t.status} ${t.statusText}`);return await t.json()}async averageRatingsByProductId(e){let t=await fetch(`${i.BASE_URL}/review/avg/p/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get products by ids: ${t.status} ${t.statusText}`);return await t.json()}async getCoupons(){let e=await fetch(`${i.BASE_URL}/coupon`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get coupons: ${e.status} ${e.statusText}`);return await e.json()}async getCoupon(e){let t=await fetch(`${i.BASE_URL}/coupon/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get coupon: ${t.status} ${t.statusText}`);return await t.json()}async createCoupon(e){let t=await fetch(`${i.BASE_URL}/coupon`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(e)});if(!t.ok)throw Error(`Failed to create coupon: ${t.status} ${t.statusText}`);return(await t.json()).id}async updateCoupon(e,t){let a=await fetch(`${i.BASE_URL}/coupon/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update coupon: ${a.status} ${a.statusText}`)}async deleteCoupon(e){let t=await fetch(`${i.BASE_URL}/coupon/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete coupon: ${t.status} ${t.statusText}`)}async getSales(){let e=await fetch(`${i.BASE_URL}/sales`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!e.ok)throw Error(`Failed to get sales: ${e.status} ${e.statusText}`);return await e.json()}async getSale(e){let t=await fetch(`${i.BASE_URL}/sales/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get sale: ${t.status} ${t.statusText}`);return await t.json()}async getSaleProducts(e,t){let a=await fetch(`${i.BASE_URL}/sales/${e}/${t}/products`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!a.ok)throw Error(`Failed to get sale products: ${a.status} ${a.statusText}`);return await a.json()}async getCurrentSalesOverProduct(e){let t=await fetch(`${i.BASE_URL}/sales/over/${e}`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to get current sales over product: ${t.status} ${t.statusText}`);return await t.json()}async createSale(e){let t=await fetch(`${i.BASE_URL}/sales`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(e)});if(!t.ok)throw Error(`Failed to create sale: ${t.status} ${t.statusText}`);return await t.json()}async updateSale(e,t){let a=await fetch(`${i.BASE_URL}/sales/${e}`,{method:"PATCH",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`},body:JSON.stringify(t)});if(!a.ok)throw Error(`Failed to update sale: ${a.status} ${a.statusText}`)}async deleteSale(e){let t=await fetch(`${i.BASE_URL}/sales/${e}`,{method:"DELETE",headers:{"Content-Type":"application/json",Authorization:`Bearer ${this.accessToken}`}});if(!t.ok)throw Error(`Failed to delete sale: ${t.status} ${t.statusText}`)}}},48622:(e,t,a)=>{"use strict";a.d(t,{A:()=>r});var s=a(43210),o=a(47601);let r=()=>{let[e,t]=(0,s.useState)(void 0),[a,r]=(0,s.useState)(!0),[i,n]=(0,s.useState)(!1),[c,d]=(0,s.useState)(null);return(0,s.useEffect)(()=>{try{let e=localStorage.getItem("access_token");e?(d(e),n(!0)):(r(!1),n(!1))}catch(e){console.error("Error accessing localStorage:",e),r(!1),n(!1)}},[]),(0,s.useEffect)(()=>{if(!c)return void r(!1);(async()=>{try{let e=c.startsWith('"')&&c.endsWith('"')?c.slice(1,-1):c,a=o.$.getInstance(e),s=await a.getUser();if(s&&["admin","cafe_admin","ecommerce_admin"].includes(s.role))t(s),n(!0);else throw Error("User does not have the required role")}catch(e){console.error("Failed to fetch user:",e),e instanceof Error&&"Failed to fetch"!==e.message&&(localStorage.removeItem("access_token"),n(!1),t(void 0))}finally{r(!1)}})()},[c]),{user:e,isLoading:a,isAuthenticated:i,setIsAuthenticated:n,setUser:t,refreshAuth:async()=>{let e=localStorage.getItem("access_token");e&&d(e)}}}},58014:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>d,metadata:()=>c});var s=a(37413),o=a(14033);a(82704);var r=a(76795),i=a(86810),n=a(83482);let c={title:"JEEVIC",description:"Admin Dashboard"};function d({children:e}){return(0,s.jsx)("html",{lang:"en",children:(0,s.jsx)("body",{children:(0,s.jsx)(r.AuthContextProvider,{children:(0,s.jsx)(i.PopupProvider,{children:(0,s.jsx)(n.AuthGuard,{children:(0,s.jsxs)("div",{className:"flex h-screen bg-white",children:[(0,s.jsx)(o.Sidebar,{}),(0,s.jsx)("div",{className:"flex-1 flex flex-col overflow-auto",children:e})]})})})})})})}},64513:(e,t,a)=>{Promise.resolve().then(a.bind(a,97836)),Promise.resolve().then(a.bind(a,86527)),Promise.resolve().then(a.bind(a,77490)),Promise.resolve().then(a.bind(a,41977))},76795:(e,t,a)=>{"use strict";a.d(t,{AuthContextProvider:()=>s});let s=(0,a(12907).registerClientReference)(function(){throw Error("Attempted to call AuthContextProvider() from the server but AuthContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\provider.tsx","AuthContextProvider")},77490:(e,t,a)=>{"use strict";a.d(t,{PopupProvider:()=>d,O:()=>l});var s=a(60687),o=a(43210),r=a(11860);function i({title:e,message:t,isOpen:a,onClose:i,type:n="info",autoClose:c=!0,autoCloseTime:d=3e3}){let[l,h]=(0,o.useState)(!1);return a||l?(0,s.jsx)("div",{className:"fixed inset-0 flex items-center justify-center z-50 px-4 pointer-events-none",children:(0,s.jsx)("div",{className:`
          ${(()=>{switch(n){case"success":return"bg-green-50 border-green-500 text-green-700";case"error":return"bg-red-50 border-red-500 text-red-700";case"warning":return"bg-yellow-50 border-yellow-500 text-yellow-700";default:return"bg-blue-50 border-blue-500 text-blue-700"}})()} 
          border rounded-lg shadow-lg max-w-md w-full pointer-events-auto
          transition-opacity duration-300 ${l?"opacity-100":"opacity-0"}
        `,children:(0,s.jsxs)("div",{className:"p-4 flex",children:[(0,s.jsx)("div",{className:`flex-shrink-0 ${(()=>{switch(n){case"success":return"text-green-500";case"error":return"text-red-500";case"warning":return"text-yellow-500";default:return"text-blue-500"}})()}`,children:(()=>{switch(n){case"success":return(0,s.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M5 13l4 4L19 7"})});case"error":return(0,s.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M6 18L18 6M6 6l12 12"})});case"warning":return(0,s.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"})});default:return(0,s.jsx)("svg",{className:"w-6 h-6",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,s.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"2",d:"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"})})}})()}),(0,s.jsxs)("div",{className:"ml-3 flex-grow",children:[e&&(0,s.jsx)("h3",{className:"text-sm font-medium",children:e}),(0,s.jsx)("div",{className:"text-sm mt-1",children:t})]}),(0,s.jsx)("button",{onClick:()=>{h(!1),setTimeout(i,300)},className:"flex-shrink-0 ml-1 text-gray-400 hover:text-gray-500 focus:outline-none",children:(0,s.jsx)(r.A,{size:18})})]})})}):null}function n({title:e="Confirm Action",message:t,isOpen:a,onConfirm:i,onCancel:n,confirmText:c="Confirm",cancelText:d="Cancel"}){let[l,h]=(0,o.useState)(!1),u=()=>{h(!1),setTimeout(()=>{n()},300)};return a||l?(0,s.jsx)("div",{className:"fixed inset-0 flex items-center justify-center z-50 bg-black/50",children:(0,s.jsx)("div",{className:`
          bg-white border rounded-lg shadow-lg max-w-md w-full
          transition-opacity duration-300 ${l?"opacity-100":"opacity-0"}
          transition-transform duration-300 ${l?"scale-100":"scale-95"}
        `,children:(0,s.jsxs)("div",{className:"p-5",children:[(0,s.jsxs)("div",{className:"flex justify-between items-center mb-4",children:[(0,s.jsx)("h3",{className:"text-lg font-medium text-gray-900",children:e}),(0,s.jsx)("button",{onClick:u,className:"text-gray-400 hover:text-gray-500 focus:outline-none",children:(0,s.jsx)(r.A,{size:20})})]}),(0,s.jsx)("div",{className:"mb-5",children:(0,s.jsx)("p",{className:"text-gray-600",children:t})}),(0,s.jsxs)("div",{className:"flex justify-end space-x-3",children:[(0,s.jsx)("button",{onClick:u,className:"px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:outline-none",children:d}),(0,s.jsx)("button",{onClick:()=>{h(!1),setTimeout(()=>{i()},300)},className:"px-4 py-2 bg-red-600 border border-transparent rounded-md text-white hover:bg-red-700 focus:outline-none",children:c})]})]})})}):null}let c=(0,o.createContext)(void 0);function d({children:e}){let[t,a]=(0,o.useState)([]),[r,d]=(0,o.useState)(null),l=e=>{a(t=>t.filter(t=>t.id!==e))},h=()=>{d(null)};return(0,s.jsxs)(c.Provider,{value:{showPopup:(e,t={})=>{let s=Date.now().toString(),{title:o,type:r="info",autoClose:i=!0,autoCloseTime:n=3e3}=t;a(t=>[...t,{id:s,message:e,title:o,type:r,autoClose:i,autoCloseTime:n}])},showConfirm:(e,t,a={})=>{let s=Date.now().toString(),{title:o,confirmText:r,cancelText:i}=a;d({id:s,message:e,title:o,confirmText:r,cancelText:i,onConfirm:t})}},children:[e,t.map(e=>(0,s.jsx)(i,{isOpen:!0,message:e.message,title:e.title,type:e.type,autoClose:e.autoClose,autoCloseTime:e.autoCloseTime,onClose:()=>l(e.id)},e.id)),r&&(0,s.jsx)(n,{isOpen:!0,message:r.message,title:r.title,confirmText:r.confirmText,cancelText:r.cancelText,onConfirm:()=>{r.onConfirm(),h()},onCancel:h})]})}function l(){let e=(0,o.useContext)(c);if(void 0===e)throw Error("usePopup must be used within a PopupProvider");return e}},82704:()=>{},83482:(e,t,a)=>{"use strict";a.d(t,{AuthGuard:()=>s});let s=(0,a(12907).registerClientReference)(function(){throw Error("Attempted to call AuthGuard() from the server but AuthGuard is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\components\\auth\\auth-guard.tsx","AuthGuard")},86527:(e,t,a)=>{"use strict";a.d(t,{Sidebar:()=>B});var s=a(60687),o=a(85814),r=a.n(o),i=a(16189),n=a(43210),c=a(14952),d=a(47033),l=a(65777),h=a(19080),u=a(37360),p=a(44381),$=a(47765),y=a(64398),T=a(48730),f=a(84027),w=a(41550),m=a(58887),g=a(86594),x=a(33872),E=a(41312),j=a(40083),k=a(77490);function A({variant:e="full",className:t=""}){let a=(0,i.useRouter)(),{showConfirm:o}=(0,k.O)(),[r,c]=(0,n.useState)(!1),d=()=>{o("Are you sure you want to log out?",async()=>{try{c(!0),localStorage.removeItem("access_token"),a.push("/login")}finally{c(!1)}},{title:"Logout Confirmation",confirmText:"Logout",cancelText:"Cancel"})};return"icon"===e?(0,s.jsx)("button",{onClick:d,disabled:r,className:`p-2 rounded-md hover:bg-gray-100 ${t}`,title:"Logout",children:(0,s.jsx)(j.A,{size:20})}):(0,s.jsxs)("button",{onClick:d,disabled:r,className:`flex items-center space-x-2 px-4 py-2 rounded-md hover:bg-gray-100 ${t}`,children:[(0,s.jsx)(j.A,{size:18}),(0,s.jsx)("span",{children:r?"Logging out...":"Logout"})]})}var b=a(48622);function B(){let[e,t]=(0,n.useState)(!1),{isAuthenticated:a,user:o,isLoading:r}=(0,b.A)(),i=()=>{t(!e)},j=o?`${o.first_name||""} ${o.last_name||""}`.trim():"Jeevan";return r?(0,s.jsxs)("div",{className:`${e?"w-20":"w-60"} h-screen bg-white border-r flex flex-col transition-all duration-300`,children:[(0,s.jsxs)("div",{className:`${e?"justify-center":"pl-4"} p-4 border-b flex items-center`,children:[!e&&(0,s.jsx)("img",{src:"/logo1.svg",alt:""}),(0,s.jsx)("button",{onClick:i,className:`${e?"ml-0":"ml-auto"} p-1 text-black bg-gray-100 rounded-full hover:bg-gray-100`,children:e?(0,s.jsx)(c.A,{size:20}):(0,s.jsx)(d.A,{size:20})})]}),(0,s.jsx)("div",{className:"flex-1 overflow-auto"})]}):(0,s.jsxs)("div",{className:`${e?"w-20":"w-60"} h-screen bg-white  border-r flex flex-col transition-all duration-300`,children:[(0,s.jsxs)("div",{className:`${e?"justify-center":"pl-4"} p-4 border-b flex items-center`,children:[!e&&(0,s.jsx)("img",{src:"/logo1.svg",alt:""}),(0,s.jsx)("button",{onClick:i,className:`${e?"ml-0":"ml-auto"} p-1 text-black bg-gray-100 rounded-full hover:bg-gray-100`,children:e?(0,s.jsx)(c.A,{size:20}):(0,s.jsx)(d.A,{size:20})})]}),(0,s.jsxs)("div",{className:"flex-1 overflow-auto",children:[(0,s.jsxs)("div",{className:"py-4",children:[!e&&(0,s.jsx)("div",{className:"px-4 py-2",children:(0,s.jsx)("p",{className:"text-xs text-gray-400 font-medium",children:"CONVENIENCE"})}),(0,s.jsx)(C,{href:"/oveview",icon:(0,s.jsx)(l.A,{size:18}),label:"Overview",collapsed:e}),(0,s.jsx)(C,{href:"/inventory",icon:(0,s.jsx)(h.A,{size:18}),label:"Inventory",collapsed:e}),(0,s.jsx)(C,{href:"/promotions",icon:(0,s.jsx)(u.A,{size:18}),label:"Promotions & Sales",collapsed:e}),(0,s.jsx)(C,{href:"/category",icon:(0,s.jsx)(p.A,{size:18}),label:"category",collapsed:e}),(0,s.jsx)(C,{href:"/subcategory",icon:(0,s.jsx)($.A,{size:18}),label:"subcategory",collapsed:e}),(0,s.jsx)(C,{href:"/reviews",icon:(0,s.jsx)(y.A,{size:18}),label:"reviews",collapsed:e})]}),(0,s.jsxs)("div",{className:"py-4",children:[!e&&(0,s.jsx)("div",{className:"px-4 py-2",children:(0,s.jsx)("p",{className:"text-xs text-gray-400 font-medium ",children:"CAFE"})}),(0,s.jsx)(C,{href:"/",icon:(0,s.jsx)(l.A,{size:18}),label:"Overview",collapsed:e}),(0,s.jsx)(C,{href:"/real-time",icon:(0,s.jsx)(T.A,{size:18}),label:"Real-Time view",collapsed:e}),(0,s.jsx)(C,{href:"/operations",icon:(0,s.jsx)(f.A,{size:18}),label:"Operations",collapsed:e})]}),(0,s.jsxs)("div",{className:"py-4",children:[!e&&(0,s.jsx)("div",{className:"px-4 py-2",children:(0,s.jsx)("p",{className:"text-xs text-gray-400 font-medium",children:"MARKETING"})}),(0,s.jsx)(C,{href:"/promotional-mail",icon:(0,s.jsx)(w.A,{size:18}),label:"Promotional Mail",collapsed:e}),(0,s.jsx)(C,{href:"#",icon:(0,s.jsx)(m.A,{size:18}),label:"Promotional Mesasge",collapsed:e}),(0,s.jsx)(C,{href:"/coupon-codes",icon:(0,s.jsx)(g.A,{size:18}),label:"Coupon Codes",collapsed:e}),(0,s.jsx)(C,{href:"/contact-messages",icon:(0,s.jsx)(x.A,{size:18}),label:"Contact Messages",collapsed:e})]}),(0,s.jsxs)("div",{className:"py-4",children:[!e&&(0,s.jsx)("div",{className:"px-4 py-2",children:(0,s.jsx)("p",{className:"text-xs text-gray-400 font-medium",children:"Staff managemenr"})}),(0,s.jsx)(C,{href:"/staff",icon:(0,s.jsx)(E.A,{size:18}),label:"Staff Management",collapsed:e})]})]}),a&&(0,s.jsx)("div",{className:`p-4 border-t ${e?"flex flex-col items-center":""}`,children:e?(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:"w-10 h-10 bg-gray-200 rounded-full overflow-hidden mb-3",children:(0,s.jsx)("img",{src:o?.profile_picture||"/placeholder.svg?height=40&width=40",alt:"User avatar",className:"w-full h-full object-cover"})}),(0,s.jsx)(A,{variant:"icon",className:"text-gray-700 hover:text-orange-500 transition-colors"})]}):(0,s.jsxs)("div",{className:"flex flex-col",children:[(0,s.jsxs)("div",{className:"flex items-center mb-3",children:[(0,s.jsx)("div",{className:"w-10 h-10 bg-gray-200 rounded-full overflow-hidden mr-3",children:(0,s.jsx)("img",{src:o?.profile_picture||"https://i.pinimg.com/736x/d9/7b/bb/d97bbb08017ac2309307f0822e63d082.jpg?height=40&width=40",alt:"User avatar",className:"w-full h-full object-cover"})}),(0,s.jsxs)("div",{children:[(0,s.jsx)("p",{className:"text-sm font-medium text-gray-800",children:j}),(0,s.jsx)("p",{className:"text-xs text-gray-500",children:o?`${o.country_code}${o.phone_number}`:"admin@jeevic.com"})]})]}),(0,s.jsx)(A,{className:"text-sm text-gray-700 hover:text-orange-500 transition-colors"})]})})]})}function C({href:e,icon:t,label:a,collapsed:o}){let n=(0,i.usePathname)()===e&&"#"!==e;return(0,s.jsxs)(r(),{href:e,className:`flex items-center ${o?"justify-center":"px-4"} py-2 text-sm ${n?"bg-orange-500 text-white font-medium":"text-gray-800 hover:bg-gray-100"}`,title:o?a:void 0,children:[(0,s.jsx)("span",{className:o?"":"mr-3",children:t}),!o&&a]})}},86810:(e,t,a)=>{"use strict";a.d(t,{PopupProvider:()=>o});var s=a(12907);let o=(0,s.registerClientReference)(function(){throw Error("Attempted to call PopupProvider() from the server but PopupProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\popup-context.tsx","PopupProvider");(0,s.registerClientReference)(function(){throw Error("Attempted to call usePopup() from the server but usePopup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.")},"C:\\Users\\chand\\OneDrive\\Desktop\\jeevic_admin\\context\\popup-context.tsx","usePopup")},97836:(e,t,a)=>{"use strict";a.d(t,{AuthGuard:()=>c});var s=a(60687),o=a(43210),r=a(16189),i=a(48622),n=a(77490);function c({children:e}){let{isAuthenticated:t,isLoading:a,refreshAuth:c}=(0,i.A)();(0,r.useRouter)();let d=(0,r.usePathname)(),{showPopup:l}=(0,n.O)(),[h,u]=(0,o.useState)(!1),[p,$]=(0,o.useState)(!1);return(a||!p)&&"/login"!==d?(console.log("Showing loading state for protected route"),(0,s.jsx)("div",{className:"flex items-center justify-center h-screen bg-gray-50",children:(0,s.jsxs)("div",{className:"text-center",children:[(0,s.jsx)("div",{className:"flex items-center justify-center w-16 h-16 border-4 border-gray-200 border-t-4 border-t-orange-500 rounded-full animate-spin mx-auto mb-4"}),(0,s.jsx)("h2",{className:"text-xl font-medium text-gray-700 mb-1",children:"Loading"}),(0,s.jsx)("p",{className:"text-sm text-gray-500",children:"Verifying your session..."})]})})):"/login"===d||t?(0,s.jsx)(s.Fragment,{children:e}):null}}};